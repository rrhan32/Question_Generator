{"ast":null,"code":"import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { useRef, useReducer, useCallback, useEffect, useState as useState$1 } from 'react';\nimport { dequal } from 'dequal/lite';\nvar one;\nvar all = {};\nvar get$1 = function get(id) {\n  return id ? all[id] : one;\n};\nvar set$1 = function set(id, methods) {\n  if (id) {\n    all[id] = methods;\n  } else {\n    one = methods;\n  }\n};\nvar remove = function remove(id) {\n  if (id) {\n    delete all[id];\n  } else {\n    one = undefined;\n  }\n};\nvar useLatest = function (val) {\n  var ref = useRef(val);\n  ref.current = val;\n  return ref;\n};\nvar arrayToMap = function (arr, map) {\n  if (map === void 0) {\n    map = {};\n  }\n  return arr.reduce(function (obj, key) {\n    obj[map[key] || key] = true;\n    return obj;\n  }, {});\n};\nvar isFileList = function (value) {\n  return value instanceof FileList;\n};\nvar isObject = function (value) {\n  return value !== null && typeof value === \"object\";\n};\nvar cloneObject = function cloneObject(object) {\n  if (object instanceof Event) throw new Error(\"Unable to clone event.\");\n  if (!isObject(object) || isFileList(object)) return object;\n  if (object instanceof Date) return new Date(object.getTime());\n  if (Array.isArray(object)) return object.map(function (val) {\n    return cloneObject(val);\n  });\n  return Object.keys(object).reduce(function (obj, key) {\n    obj[key] = cloneObject(object[key]);\n    return obj;\n  }, {});\n};\nvar compact = function (arr) {\n  return arr.filter(Boolean);\n};\nvar isPlainObject = function (value) {\n  return !Array.isArray(value) && !(value instanceof Date) && isObject(value);\n};\nvar deepMerge = function deepMerge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n  return objects.reduce(function (prev, obj) {\n    Object.keys(obj).forEach(function (key) {\n      var prevValue = prev[key];\n      var currValue = obj[key];\n      if (Array.isArray(prevValue) && Array.isArray(currValue)) {\n        prev[key] = [].concat(prevValue, currValue);\n      } else if (isPlainObject(prevValue) && isPlainObject(currValue)) {\n        prev[key] = deepMerge(prevValue, currValue);\n      } else {\n        prev[key] = currValue;\n      }\n    });\n    return prev;\n  }, {});\n};\nvar isUndefined = function (value) {\n  return value === undefined;\n};\nvar filterErrors = function filterErrors(error, touched) {\n  if (!isPlainObject(error)) return touched ? error : undefined;\n  return Object.keys(error).reduce(function (obj, key) {\n    var nextErrors = filterErrors(error[key], touched[key] || false);\n    if (!isUndefined(nextErrors)) {\n      obj[key] = nextErrors;\n    } else {\n      delete obj[key];\n    }\n    return obj;\n  }, {});\n};\nvar stringToPath = function (str) {\n  if (typeof str !== \"string\") throw new TypeError(\"Expected a string.\");\n  if (!str.length) return [];\n  return compact(str.split(/[.[\\]]+/));\n};\nvar get = function (object, path, defaultValue) {\n  if (!isPlainObject(object) || !path) return defaultValue;\n  var value = stringToPath(path).reduce(function (obj, key) {\n    return (obj || {})[key];\n  }, object);\n  return !isUndefined(value) ? value : defaultValue;\n};\nvar getIsDirty = function (dirty) {\n  var search = function search(dty, found) {\n    if (found === void 0) {\n      found = [];\n    }\n    for (var _i = 0, _Object$values = Object.values(dty); _i < _Object$values.length; _i++) {\n      var val = _Object$values[_i];\n      if (val === true) {\n        found.push(val);\n        return found;\n      }\n      if (isObject(val)) search(val, found);\n    }\n    return found;\n  };\n  return !!search(dirty).length;\n};\nvar getPath = function (path) {\n  return ![\"values\", \"touched\", \"errors\", \"isDirty\", \"dirty\", \"isValidating\", \"isValid\", \"isSubmitting\", \"isSubmitted\", \"submitCount\"].some(function (key) {\n    return path.startsWith(key);\n  }) ? \"values.\" + path : path;\n};\nvar invariant = function (condition, message) {\n  if (process.env.NODE_ENV !== \"production\" && condition) throw new Error(message);\n};\nvar isFunction = function (value) {\n  return typeof value === \"function\";\n};\nvar isAsyncFunction = function (value) {\n  return isFunction(value) && value.constructor.name === \"AsyncFunction\";\n};\nvar isCheckboxInput = function (field) {\n  return field.type === \"checkbox\";\n};\nvar isEmptyObject = function (value) {\n  return isPlainObject(value) && !Object.keys(value).length;\n};\nvar isFieldArray = function (fields, name, callback) {\n  var fieldName;\n  Object.keys(fields).some(function (key) {\n    if (name.startsWith(key)) {\n      fieldName = key;\n      if (callback) callback(key);\n      return true;\n    }\n    return false;\n  });\n  return fieldName;\n};\nvar isFieldElement = function (element) {\n  return /INPUT|TEXTAREA|SELECT/.test(element.tagName);\n};\nvar isFileInput = function (field) {\n  return field.type === \"file\";\n};\nvar isInputElement = function (element) {\n  return element.tagName === \"INPUT\";\n};\nvar isNumberInput = function (field) {\n  return field.type === \"number\";\n};\nvar isRadioInput = function (field) {\n  return field.type === \"radio\";\n};\nvar isRangeInput = function (field) {\n  return field.type === \"range\";\n};\nvar isSelectMultiple = function (field) {\n  return field.type === \"select-multiple\";\n};\nvar isSelectOne = function (field) {\n  return field.type === \"select-one\";\n};\nvar parseState = function (path, state, pathHandler, stateHandler, isGetState) {\n  if (pathHandler === void 0) {\n    pathHandler = getPath;\n  }\n  if (!path) return isGetState ? state : undefined;\n  var parsedState;\n  if (Array.isArray(path)) {\n    parsedState = path.map(function (p) {\n      p = pathHandler(p);\n      var value = get(state, p);\n      return stateHandler ? stateHandler(p, value) : value;\n    });\n  } else if (isPlainObject(path)) {\n    var paths = path;\n    parsedState = Object.keys(paths).reduce(function (s, key) {\n      path = pathHandler(paths[key]);\n      var value = get(state, path);\n      s[key] = stateHandler ? stateHandler(path, value) : value;\n      return s;\n    }, {});\n  } else {\n    path = pathHandler(path);\n    var value = get(state, path);\n    parsedState = stateHandler ? stateHandler(path, value) : value;\n  }\n  return parsedState;\n};\nvar runWithLowPriority = function (callback) {\n  return (window.requestIdleCallback || function (cb) {\n    var start = Date.now();\n    return setTimeout(function () {\n      return cb({\n        didTimeout: false,\n        timeRemaining: /* istanbul ignore next */\n        function timeRemaining() {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  })(callback, {\n    timeout: 2000\n  });\n};\nvar set = function (object, path, value, immutable) {\n  if (!isPlainObject(object)) throw new TypeError(\"Expected an object.\");\n  var newObject = immutable ? cloneObject(object) : object;\n  var segs = stringToPath(path);\n  segs.slice(0, -1).reduce(function (obj, key, idx) {\n    var nextIsNumber = !Number.isNaN(+segs[idx + 1]);\n    if (isPlainObject(obj[key]) && !nextIsNumber || Array.isArray(obj[key]) && nextIsNumber) return obj[key];\n    obj[key] = nextIsNumber ? [] : {};\n    return obj[key];\n  }, newObject)[segs[segs.length - 1] || \"\"] = value;\n  return newObject;\n};\nvar setValuesAsTrue = function setValuesAsTrue(object) {\n  if (!Array.isArray(object) && !isPlainObject(object)) return true;\n  if (Array.isArray(object)) return object.map(function (val) {\n    return setValuesAsTrue(val);\n  });\n  return Object.keys(object).reduce(function (obj, key) {\n    obj[key] = setValuesAsTrue(object[key]);\n    return obj;\n  }, {});\n};\nvar unset = function unset(object, path, immutable) {\n  if (!isPlainObject(object)) throw new TypeError(\"Expected an object.\");\n  var refObject = immutable ? cloneObject(object) : object;\n  var newObject = refObject; // eslint-disable-next-line no-prototype-builtins\n\n  if (newObject.hasOwnProperty(path)) {\n    delete newObject[path];\n    return refObject;\n  }\n  var segs = stringToPath(path);\n  if (!segs.length) return refObject;\n  var last = segs.pop();\n  var target = segs.reduce(function (obj, key) {\n    return (obj || {})[key];\n  }, newObject);\n  if (Array.isArray(target)) {\n    var index = +last;\n    if (index < target.length - 1) {\n      delete target[index];\n    } else {\n      while (index >= 0) {\n        // @ts-expect-error\n        if (index == last || isUndefined(target[index])) {\n          target.splice(index, 1);\n          index -= 1;\n        } else {\n          break;\n        }\n      }\n    }\n  } else if (isPlainObject(target)) {\n    delete target[last];\n  }\n  return isEmptyObject(target) || Array.isArray(target) && !target.filter(function (t) {\n    return !isUndefined(t);\n  }).length ? unset(refObject, segs.join(\".\")) : refObject;\n};\nvar warn = function () {\n  var _console;\n  if (process.env.NODE_ENV !== \"production\") (_console = console).warn.apply(_console, arguments);\n};\nvar useState = function (initialState, onChange) {\n  var _useReducer = useReducer(function (c) {\n      return c + 1;\n    }, 0),\n    forceUpdate = _useReducer[1];\n  var stateRef = useRef(initialState);\n  var observersRef = useRef([{\n    usedState: {},\n    notify: forceUpdate\n  }]);\n  var onChangeRef = useLatest(onChange || function () {\n    return undefined;\n  });\n  var setStateRef = useCallback(function (path, value, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      fieldPath = _ref.fieldPath,\n      shouldSkipUpdate = _ref.shouldSkipUpdate,\n      shouldForceUpdate = _ref.shouldForceUpdate;\n    var key = path.split(\".\")[0];\n    if (!key) {\n      if (!dequal(stateRef.current, value)) {\n        stateRef.current = value;\n        onChangeRef.current(stateRef.current);\n        observersRef.current.forEach(function (_ref2) {\n          var usedState = _ref2.usedState,\n            notify = _ref2.notify;\n          return !isEmptyObject(usedState) && notify(stateRef.current);\n        });\n      }\n      return;\n    }\n    if (path !== \"values\" && key === \"values\" || !dequal(get(stateRef.current, path), value)) {\n      var state = set(stateRef.current, path, value, true);\n      var errors = state.errors,\n        dirty = state.dirty,\n        prevIsDirty = state.isDirty,\n        prevIsValid = state.isValid,\n        prevSubmitCount = state.submitCount;\n      var currSubmitCount = state.submitCount;\n      var isDirty = key === \"dirty\" ? getIsDirty(dirty) : prevIsDirty;\n      var isValid = key === \"errors\" ? isEmptyObject(errors) : prevIsValid;\n      var submitCount = key === \"isSubmitting\" && value ? currSubmitCount += 1 : currSubmitCount;\n      stateRef.current = _extends({}, state, {\n        isDirty: isDirty,\n        isValid: isValid,\n        submitCount: submitCount\n      });\n      onChangeRef.current(stateRef.current);\n      if (shouldSkipUpdate) return;\n      path = fieldPath || path;\n      observersRef.current.forEach(function (_ref3) {\n        var usedState = _ref3.usedState,\n          notify = _ref3.notify;\n        return (shouldForceUpdate || Object.keys(usedState).some(function (k) {\n          return path.startsWith(k) || k.startsWith(path);\n        }) || usedState.isDirty && isDirty !== prevIsDirty || usedState.isValid && isValid !== prevIsValid || usedState.submitCount && submitCount !== prevSubmitCount) && notify(stateRef.current);\n      });\n    }\n  }, [onChangeRef]);\n  return {\n    stateRef: stateRef,\n    setStateRef: setStateRef,\n    observersRef: observersRef\n  };\n};\nvar _excluded$1 = [\"defaultValue\"],\n  _excluded2$1 = [\"validate\"];\nvar useForm = function (_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    id = _ref.id,\n    _ref$defaultValues = _ref.defaultValues,\n    defaultValues = _ref$defaultValues === void 0 ? {} : _ref$defaultValues,\n    validate = _ref.validate,\n    _ref$validateOnChange = _ref.validateOnChange,\n    validateOnChange = _ref$validateOnChange === void 0 ? true : _ref$validateOnChange,\n    _ref$validateOnBlur = _ref.validateOnBlur,\n    validateOnBlur = _ref$validateOnBlur === void 0 ? true : _ref$validateOnBlur,\n    _ref$focusOnError = _ref.focusOnError,\n    focusOnError = _ref$focusOnError === void 0 ? true : _ref$focusOnError,\n    _ref$removeOnUnmounte = _ref.removeOnUnmounted,\n    removeOnUnmounted = _ref$removeOnUnmounte === void 0 ? true : _ref$removeOnUnmounte,\n    _ref$builtInValidatio = _ref.builtInValidationMode,\n    builtInValidationMode = _ref$builtInValidatio === void 0 ? \"message\" : _ref$builtInValidatio,\n    _ref$excludeFields = _ref.excludeFields,\n    excludeFields = _ref$excludeFields === void 0 ? [] : _ref$excludeFields,\n    onReset = _ref.onReset,\n    onSubmit = _ref.onSubmit,\n    onError = _ref.onError,\n    onStateChange = _ref.onStateChange;\n  var handlersRef = useRef({});\n  var mutationObserverRef = useRef();\n  var formRef = useRef();\n  var fieldsRef = useRef(new Map());\n  var fieldParsersRef = useRef({});\n  var fieldArrayRef = useRef({});\n  var controlsRef = useRef({});\n  var formValidatorRef = useLatest(validate);\n  var fieldValidatorsRef = useRef({});\n  var changedFieldRef = useRef();\n  var excludeFieldsRef = useRef(arrayToMap(excludeFields));\n  var onResetRef = useLatest(onReset || function () {\n    return undefined;\n  });\n  var onSubmitRef = useLatest(onSubmit || function () {\n    return undefined;\n  });\n  var onErrorRef = useLatest(onError || function () {\n    return undefined;\n  });\n  var hasWarnValues = useRef(false);\n  var initialStateRef = useRef({\n    values: defaultValues,\n    touched: {},\n    errors: {},\n    isDirty: false,\n    dirty: {},\n    isValidating: false,\n    isValid: true,\n    isSubmitting: false,\n    isSubmitted: false,\n    submitCount: 0\n  });\n  var _useState = useState(_extends({}, initialStateRef.current), onStateChange),\n    stateRef = _useState.stateRef,\n    setStateRef = _useState.setStateRef,\n    observersRef = _useState.observersRef;\n  var handleUnset = useCallback(function (path, options) {\n    var segs = path.split(\".\");\n    var k = segs.shift();\n    setStateRef(k, unset(stateRef.current[k], segs.join(\".\"), true), _extends({\n      fieldPath: path\n    }, options));\n  }, [setStateRef, stateRef]);\n  var handleFocus = useCallback(function (name) {\n    var _fieldsRef$current$ge, _fieldsRef$current$ge2;\n    var field = ((_fieldsRef$current$ge = fieldsRef.current.get(name)) == null ? void 0 : _fieldsRef$current$ge.field) || ((_fieldsRef$current$ge2 = fieldsRef.current.get(Array.from(fieldsRef.current.keys()).find(function (n) {\n      return n.startsWith(name);\n    }) || \"\")) == null ? void 0 : _fieldsRef$current$ge2.field);\n    if (field && isFunction(field.focus)) field.focus();\n  }, []);\n  var getFields = useCallback(function (form) {\n    return Array.from(form.querySelectorAll(\"input,textarea,select\")).filter(function (element) {\n      var field = element;\n      var type = field.type,\n        name = field.name,\n        fieldId = field.id,\n        classList = field.classList,\n        rcfExclude = field.dataset.rcfExclude;\n      var exclude = excludeFieldsRef.current;\n      if (/button|image|submit|reset/.test(type) || fieldId && exclude[\"#\" + fieldId] || Array.from(classList).find(function (n) {\n        return exclude[\".\" + n];\n      })) return false;\n      if (rcfExclude !== \"true\" && !name) {\n        warn('💡 react-cool-form > field: Missing \"name\" attribute. Do you want to exclude the field? See: https://react-cool-form.netlify.app/docs/api-reference/use-form/#excludefields');\n        return false;\n      }\n      return controlsRef.current[name] || rcfExclude !== \"true\" && !exclude[name];\n    }).reduce(function (acc, elm) {\n      var _acc$get;\n      var field = elm;\n      var name = field.name;\n      var fieldArrayName = isFieldArray(fieldArrayRef.current, name);\n      if (fieldArrayName) fieldArrayRef.current[fieldArrayName].fields[name] = true;\n      acc.set(name, _extends({}, acc.get(name), {\n        field: ((_acc$get = acc.get(name)) == null ? void 0 : _acc$get.field) || field\n      }));\n      if (isCheckboxInput(field) || isRadioInput(field)) {\n        acc.get(name).options = acc.get(name).options ? [].concat(acc.get(name).options, [field]) : [field];\n      } else if (isSelectOne(field) || isSelectMultiple(field)) {\n        acc.get(name).options = Array.from(field.options);\n      }\n      return acc;\n    }, new Map());\n  }, []);\n  var getNodeValue = useCallback(function (name, fields) {\n    var _find;\n    if (fields === void 0) {\n      fields = fieldsRef.current;\n    }\n    if (!fields.has(name)) return undefined;\n    var _ref2 = fields.get(name),\n      field = _ref2.field,\n      options = _ref2.options;\n    if (isInputElement(field)) {\n      var _fieldParsersRef$curr, _fieldParsersRef$curr2;\n      if ((_fieldParsersRef$curr = fieldParsersRef.current[name]) != null && _fieldParsersRef$curr.valueAsNumber) return field.valueAsNumber;\n      if ((_fieldParsersRef$curr2 = fieldParsersRef.current[name]) != null && _fieldParsersRef$curr2.valueAsDate) return field.valueAsDate;\n    }\n    if (isNumberInput(field) || isRangeInput(field)) return field.valueAsNumber || \"\";\n    if (isCheckboxInput(field)) {\n      var checkboxes = options;\n      if (checkboxes.length > 1) return checkboxes.filter(function (c) {\n        return c.checked;\n      }).map(function (c) {\n        return c.value;\n      });\n      var checkbox = checkboxes[0];\n      if (checkbox.hasAttribute(\"value\") && checkbox.value) return checkbox.checked ? [checkbox.value] : [];\n      return checkbox.checked;\n    }\n    if (isRadioInput(field)) return ((_find = options.find(function (radio) {\n      return radio.checked;\n    })) == null ? void 0 : _find.value) || \"\";\n    if (isSelectMultiple(field)) return options.filter(function (option) {\n      return option.selected;\n    }).map(function (option) {\n      return option.value;\n    });\n    if (isFileInput(field)) return field.files;\n    return field.value;\n  }, []);\n  var setNodeValue = useCallback(function (name, value, fields) {\n    if (fields === void 0) {\n      fields = fieldsRef.current;\n    }\n    if (!fields.has(name) || controlsRef.current[name]) return;\n    var _ref3 = fields.get(name),\n      field = _ref3.field,\n      options = _ref3.options;\n    if (isCheckboxInput(field)) {\n      var checkboxes = options;\n      if (checkboxes.length > 1) {\n        checkboxes.forEach(function (checkbox) {\n          checkbox.checked = Array.isArray(value) ? value.includes(checkbox.value) : !!value;\n        });\n      } else {\n        checkboxes[0].checked = !!value;\n      }\n    } else if (isRadioInput(field)) {\n      options.forEach(function (radio) {\n        radio.checked = radio.value === value;\n      });\n    } else if (isSelectMultiple(field) && Array.isArray(value)) {\n      options.forEach(function (option) {\n        option.selected = !!value.includes(option.value);\n      });\n    } else if (isFileInput(field)) {\n      if (isFileList(value)) field.files = value;\n      if (!value) field.value = \"\";\n    } else {\n      field.value = value != null ? value : \"\";\n    }\n  }, []);\n  var setDefaultValue = useCallback(function (name, value, shouldUpdateDefaultValue) {\n    if (shouldUpdateDefaultValue === void 0) {\n      shouldUpdateDefaultValue = !isFieldArray(fieldArrayRef.current, name) || !isUndefined(get(initialStateRef.current.values, name.split(\".\")[0]));\n    }\n    if (shouldUpdateDefaultValue) initialStateRef.current.values = set(initialStateRef.current.values, name, value, true);\n    if (!dequal(get(stateRef.current.values, name), value)) setStateRef(\"values.\" + name, value, {\n      shouldSkipUpdate: true\n    });\n  }, [setStateRef, stateRef]);\n  var setNodesOrValues = useCallback(function (values, _temp2) {\n    var _ref4 = _temp2 === void 0 ? {} : _temp2,\n      _ref4$shouldSetValues = _ref4.shouldSetValues,\n      shouldSetValues = _ref4$shouldSetValues === void 0 ? true : _ref4$shouldSetValues,\n      _ref4$fields = _ref4.fields,\n      fields = _ref4$fields === void 0 ? Array.from(fieldsRef.current.keys()) : _ref4$fields;\n    return fields.forEach(function (name) {\n      if (controlsRef.current[name]) return;\n      var value = get(values, name);\n      if (!isUndefined(value)) setNodeValue(name, value);\n      if (shouldSetValues) setDefaultValue(name, !isUndefined(value) ? value : getNodeValue(name));\n    });\n  }, [getNodeValue, setDefaultValue, setNodeValue]);\n  var setError = useCallback(function (name, error) {\n    error = isFunction(error) ? error(get(stateRef.current.errors, name)) : error;\n    if (error) {\n      setStateRef(\"errors.\" + name, error);\n    } else {\n      handleUnset(\"errors.\" + name);\n    }\n  }, [handleUnset, setStateRef, stateRef]);\n  var clearErrors = useCallback(function (name) {\n    if (!name) {\n      setStateRef(\"errors\", {});\n    } else if (Array.isArray(name)) {\n      name.forEach(function (n) {\n        return setError(n);\n      });\n    } else {\n      setError(name);\n    }\n  }, [setError, setStateRef]);\n  var runBuiltInValidation = useCallback(function (name) {\n    if (builtInValidationMode === false || !fieldsRef.current.has(name)) return undefined;\n    var _ref5 = fieldsRef.current.get(name),\n      _ref5$field = _ref5.field,\n      validity = _ref5$field.validity,\n      validationMessage = _ref5$field.validationMessage;\n    if (builtInValidationMode === \"state\") for (var k in validity) {\n      if (k !== \"valid\" && validity[k]) return k;\n    }\n    return validationMessage;\n  }, [builtInValidationMode]);\n  var runAllBuiltInValidation = useCallback(function () {\n    if (builtInValidationMode === false) return {};\n    return Array.from(fieldsRef.current.keys()).reduce(function (errors, name) {\n      var error = runBuiltInValidation(name);\n      errors = _extends({}, errors, error ? set(errors, name, error) : {});\n      return errors;\n    }, {});\n  }, [builtInValidationMode, runBuiltInValidation]);\n  var runFieldValidation = useCallback(async function (name) {\n    var value = get(stateRef.current.values, name);\n    if (!fieldValidatorsRef.current[name] || isUndefined(value)) return undefined;\n    try {\n      var error = await fieldValidatorsRef.current[name](value, stateRef.current.values);\n      return error;\n    } catch (exception) {\n      warn(\"\\uD83D\\uDCA1 react-cool-form > validate \" + name + \": \", exception);\n      throw exception;\n    }\n  }, [stateRef]);\n  var runAllFieldsValidation = useCallback(function () {\n    var promises = Object.keys(fieldValidatorsRef.current).map(function (name) {\n      return runFieldValidation(name);\n    });\n    return Promise.all(promises).then(function (errors) {\n      return Object.keys(fieldValidatorsRef.current).reduce(function (acc, cur, idx) {\n        acc = _extends({}, acc, errors[idx] ? set(acc, cur, errors[idx]) : {});\n        return acc;\n      }, {});\n    });\n  }, [runFieldValidation]);\n  var runFormValidation = useCallback(async function (name) {\n    if (!formValidatorRef.current) return name ? undefined : {};\n    try {\n      var errors = await formValidatorRef.current(stateRef.current.values);\n      if (name) return get(errors, name);\n      return isPlainObject(errors) ? errors : {};\n    } catch (exception) {\n      warn(\"\\uD83D\\uDCA1 react-cool-form > validate form: \", exception);\n      throw exception;\n    }\n  }, [formValidatorRef, stateRef]);\n  var validateField = useCallback(async function (name) {\n    var hasAsyncValidator = isAsyncFunction(formValidatorRef.current) || isAsyncFunction(fieldValidatorsRef.current[name]);\n    if (hasAsyncValidator) setStateRef(\"isValidating\", true);\n    try {\n      var error = (await runFormValidation(name)) || (await runFieldValidation(name)) || runBuiltInValidation(name);\n      setError(name, error);\n      if (hasAsyncValidator) setStateRef(\"isValidating\", false);\n      return error;\n    } catch (exception) {\n      return exception;\n    }\n  }, [formValidatorRef, runBuiltInValidation, runFieldValidation, runFormValidation, setError, setStateRef]);\n  var validateFieldWithLowPriority = useCallback(function (name) {\n    return runWithLowPriority(function () {\n      return validateField(name);\n    });\n  }, [validateField]);\n  var validateForm = useCallback(function () {\n    setStateRef(\"isValidating\", true);\n    return Promise.all([runAllBuiltInValidation(), runAllFieldsValidation(), runFormValidation()]).then(function (errors) {\n      var errs = deepMerge.apply(void 0, errors);\n      setStateRef(\"errors\", errs);\n      setStateRef(\"isValidating\", false);\n      return errs;\n    });\n  }, [runAllBuiltInValidation, runAllFieldsValidation, runFormValidation, setStateRef]);\n  var runValidation = useCallback(function (name, _temp3) {\n    var _ref6 = _temp3 === void 0 ? {} : _temp3,\n      _ref6$shouldFocus = _ref6.shouldFocus,\n      shouldFocus = _ref6$shouldFocus === void 0 ? focusOnError : _ref6$shouldFocus;\n    var names = [];\n    if (shouldFocus) {\n      names = Array.isArray(shouldFocus) ? shouldFocus : Array.from(fieldsRef.current.keys());\n      names = isFunction(shouldFocus) ? shouldFocus(names) : names;\n    }\n    if (!name) return validateForm().then(function (errors) {\n      if (shouldFocus) {\n        var fieldName = names.find(function (n) {\n          return get(errors, n);\n        });\n        if (fieldName) handleFocus(fieldName);\n      }\n      return isEmptyObject(errors);\n    });\n    if (Array.isArray(name)) return Promise.all(name.map(function (n) {\n      return validateField(n);\n    })).then(function (errors) {\n      if (shouldFocus) {\n        var fieldName = names.find(function (n) {\n          return !!errors[name.indexOf(n)];\n        });\n        if (fieldName) handleFocus(fieldName);\n      }\n      return !compact(errors).length;\n    });\n    return validateField(name).then(function (error) {\n      if (shouldFocus && error && names.includes(name)) handleFocus(name);\n      return !error;\n    });\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [handleFocus, validateField, validateForm]);\n  var getFormState = useCallback(function (path, _temp4) {\n    var _ref7 = _temp4 === void 0 ? {} : _temp4,\n      errorWithTouched = _ref7.errorWithTouched,\n      _ref7$defaultValues = _ref7.defaultValues,\n      dfValues = _ref7$defaultValues === void 0 ? {} : _ref7$defaultValues,\n      _ref7$methodName = _ref7.methodName,\n      methodName = _ref7$methodName === void 0 ? \"getState\" : _ref7$methodName,\n      callback = _ref7.callback;\n    var usedState = {};\n    var state = parseState(path, stateRef.current, function (p) {\n      p = getPath(p);\n      if (methodName !== \"getState\") {\n        if (p === \"values\" && methodName !== \"useFormStateCallback\" && !hasWarnValues.current) {\n          warn(\"\\uD83D\\uDCA1 react-cool-form > \" + methodName + \": Getting \\\"values\\\" alone might cause unnecessary re-renders. If you know what you're doing, just ignore this warning. See: https://react-cool-form.netlify.app/docs/getting-started/form-state#best-practices\");\n          hasWarnValues.current = true;\n        }\n        usedState[p] = true;\n      }\n      return p;\n    }, function (p, v) {\n      if (methodName === \"getState\") return v;\n      if (p.startsWith(\"values\")) {\n        if (!isUndefined(v)) return v;\n        p = p.replace(\"values.\", \"\");\n        v = get(initialStateRef.current, p);\n        return !isUndefined(v) ? v : get(dfValues, p);\n      }\n      if (!errorWithTouched || !p.startsWith(\"errors\")) return v;\n      p = p.replace(\"errors\", \"touched\");\n      usedState[p] = true;\n      return filterErrors(v, get(stateRef.current, p));\n    }, methodName === \"getState\");\n    if (callback) callback(usedState);\n    return state;\n  }, [stateRef]);\n  var focus = useCallback(function (name, delay) {\n    if (!isUndefined(delay)) {\n      setTimeout(function () {\n        return handleFocus(name);\n      }, delay);\n    } else {\n      handleFocus(name);\n    }\n  }, [handleFocus]);\n  var use = useCallback(function (path, _temp5) {\n    var _ref8 = _temp5 === void 0 ? {} : _temp5,\n      errorWithTouched = _ref8.errorWithTouched,\n      dfValues = _ref8.defaultValues;\n    return getFormState(path, {\n      errorWithTouched: errorWithTouched,\n      defaultValues: dfValues,\n      methodName: \"use\",\n      callback: function callback(usedState) {\n        observersRef.current[0].usedState = _extends({}, observersRef.current[0].usedState, usedState);\n      }\n    });\n  }, [getFormState, observersRef]);\n  var getState = useCallback(function (path) {\n    return getFormState(path);\n  }, [getFormState]);\n  var setTouched = useCallback(function (name, isTouched, _temp6) {\n    if (isTouched === void 0) {\n      isTouched = true;\n    }\n    var _ref9 = _temp6 === void 0 ? {} : _temp6,\n      _ref9$shouldValidate = _ref9.shouldValidate,\n      shouldValidate = _ref9$shouldValidate === void 0 ? validateOnBlur : _ref9$shouldValidate;\n    if (isTouched) {\n      setStateRef(\"touched.\" + name, true);\n    } else {\n      handleUnset(\"touched.\" + name);\n    }\n    if (shouldValidate) validateFieldWithLowPriority(name);\n  }, [handleUnset, setStateRef, validateFieldWithLowPriority, validateOnBlur]);\n  var setTouchedMaybeValidate = useCallback(function (name) {\n    return setTouched(name, true, {\n      shouldValidate: validateOnChange ? name !== changedFieldRef.current : undefined\n    });\n  }, [setTouched, validateOnChange]);\n  var setDirty = useCallback(function (name, isDirty) {\n    if (isDirty === void 0) {\n      isDirty = true;\n    }\n    if (isDirty) {\n      setStateRef(\"dirty.\" + name, true);\n    } else {\n      handleUnset(\"dirty.\" + name);\n    }\n  }, [handleUnset, setStateRef]);\n  var setDirtyIfNeeded = useCallback(function (name) {\n    return setDirty(name, !dequal(get(stateRef.current.values, name), get(initialStateRef.current.values, name)));\n  }, [setDirty, stateRef]);\n  var setValue = useCallback(function (name, value, _temp7) {\n    var _ref10 = _temp7 === void 0 ? {} : _temp7,\n      _ref10$shouldValidate = _ref10.shouldValidate,\n      shouldValidate = _ref10$shouldValidate === void 0 ? validateOnChange : _ref10$shouldValidate,\n      _ref10$shouldTouched = _ref10.shouldTouched,\n      shouldTouched = _ref10$shouldTouched === void 0 ? true : _ref10$shouldTouched,\n      _ref10$shouldDirty = _ref10.shouldDirty,\n      shouldDirty = _ref10$shouldDirty === void 0 ? true : _ref10$shouldDirty;\n    value = isFunction(value) ? value(get(stateRef.current.values, name)) : value;\n    if (!isUndefined(value)) {\n      setStateRef(\"values.\" + name, value);\n    } else {\n      handleUnset(\"values.\" + name);\n    }\n    setNodeValue(name, value);\n    isFieldArray(fieldArrayRef.current, name, function (key) {\n      return fieldArrayRef.current[key].reset();\n    });\n    if (shouldTouched) setTouched(name, true, {\n      shouldValidate: false\n    });\n    if (shouldDirty) setDirtyIfNeeded(name);\n    if (shouldValidate) validateFieldWithLowPriority(name);\n  }, [handleUnset, setDirtyIfNeeded, setNodeValue, setStateRef, setTouched, stateRef, validateFieldWithLowPriority, validateOnChange]);\n  var getOptions = useCallback(function () {\n    return {\n      getState: getState,\n      setValue: setValue,\n      setTouched: setTouched,\n      setDirty: setDirty,\n      setError: setError,\n      clearErrors: clearErrors,\n      runValidation: runValidation,\n      removeField: removeField,\n      focus: focus,\n      reset: reset,\n      submit: submit\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var reset = useCallback(function (values, exclude, e) {\n    if (e != null && e.preventDefault) e.preventDefault();\n    if (e != null && e.stopPropagation) e.stopPropagation();\n    var state = _extends({}, stateRef.current);\n    var skip = arrayToMap(exclude || []);\n    Object.keys(state).forEach(function (key) {\n      if (skip[key]) return;\n      if (key === \"values\") {\n        var nextValues = (isFunction(values) ? values(stateRef.current.values) : values) || initialStateRef.current.values;\n        state[key] = nextValues;\n        initialStateRef.current.values = nextValues;\n        setNodesOrValues(nextValues, {\n          shouldSetValues: false,\n          fields: Array.from(fieldsRef.current.keys()).filter(function (name) {\n            return !isFieldArray(fieldArrayRef.current, name);\n          })\n        });\n      } else {\n        // @ts-expect-error\n        state[key] = initialStateRef.current[key];\n      }\n    });\n    setStateRef(\"\", state);\n    onResetRef.current(state.values, getOptions(), e);\n    Object.values(fieldArrayRef.current).forEach(function (field) {\n      return field.reset();\n    });\n  }, [getOptions, onResetRef, setNodesOrValues, setStateRef, stateRef]);\n  var submit = useCallback(async function (e) {\n    if (e != null && e.preventDefault) e.preventDefault();\n    if (e != null && e.stopPropagation) e.stopPropagation();\n    var nextTouched = [].concat(Array.from(fieldsRef.current.keys()), Object.keys(controlsRef.current)).reduce(function (touched, name) {\n      touched = set(touched, name, true, true);\n      return touched;\n    }, stateRef.current.touched);\n    setStateRef(\"touched\", nextTouched);\n    setStateRef(\"isSubmitted\", false);\n    setStateRef(\"isSubmitting\", true);\n    try {\n      var isValid = await runValidation();\n      if (!isValid) {\n        var errors = stateRef.current.errors;\n        onErrorRef.current(errors, getOptions(), e);\n        return {\n          errors: errors\n        };\n      }\n      await onSubmitRef.current(stateRef.current.values, getOptions(), e);\n      setStateRef(\"isSubmitted\", true);\n      return {\n        values: stateRef.current.values\n      };\n    } catch (exception) {\n      warn(\"\\uD83D\\uDCA1 react-cool-form > submit: \", exception);\n      throw exception;\n    } finally {\n      setStateRef(\"isSubmitting\", false);\n    }\n  }, [getOptions, onErrorRef, onSubmitRef, runValidation, setStateRef, stateRef]);\n  var handleChangeEvent = useCallback(function (name, value) {\n    setStateRef(\"values.\" + name, value);\n    setDirtyIfNeeded(name);\n    if (validateOnChange) validateFieldWithLowPriority(name);\n  }, [setDirtyIfNeeded, setStateRef, validateFieldWithLowPriority, validateOnChange]);\n  var shouldRemoveField = useCallback(function (name) {\n    if (!removeOnUnmounted) return false;\n    var names = Array.isArray(removeOnUnmounted) ? removeOnUnmounted : [].concat(Array.from(fieldsRef.current.keys()), Object.keys(controlsRef.current), Object.keys(fieldArrayRef.current));\n    names = isFunction(removeOnUnmounted) ? removeOnUnmounted(names) : names;\n    return names.includes(name);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var removeField = useCallback(function (name, exclude) {\n    var _arrayToMap = arrayToMap(exclude || [], {\n        value: \"values\",\n        error: \"errors\"\n      }),\n      defaultValue = _arrayToMap.defaultValue,\n      rest = _objectWithoutPropertiesLoose(_arrayToMap, _excluded$1);\n    if (!defaultValue) initialStateRef.current.values = unset(initialStateRef.current.values, name, true);\n    [\"values\", \"touched\", \"dirty\", \"errors\"].forEach(function (key, idx, arr) {\n      var shouldForceUpdate = idx === arr.length - 1;\n      if (!rest[key] && !isUndefined(get(stateRef.current[key], name))) handleUnset(key + \".\" + name, {\n        shouldSkipUpdate: !shouldForceUpdate,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    });\n    delete fieldParsersRef.current[name];\n    delete fieldValidatorsRef.current[name];\n    delete fieldArrayRef.current[name];\n    delete controlsRef.current[name];\n    if (fieldsRef.current.has(name)) fieldsRef.current[\"delete\"](name);\n  }, [handleUnset, stateRef]);\n  var registerForm = useCallback(function (el) {\n    if (!el) return;\n    formRef.current = el;\n    var form = formRef.current;\n    fieldsRef.current = getFields(form);\n    setNodesOrValues(initialStateRef.current.values);\n    handlersRef.current.change = function (_ref11) {\n      var target = _ref11.target;\n      var _ref12 = target,\n        name = _ref12.name;\n      if (fieldsRef.current.has(name) && !controlsRef.current[name]) {\n        var _fieldParsersRef$curr3;\n        var parse = (_fieldParsersRef$curr3 = fieldParsersRef.current[name]) == null ? void 0 : _fieldParsersRef$curr3.parse;\n        var value = getNodeValue(name);\n        handleChangeEvent(name, parse ? parse(value) : value);\n        changedFieldRef.current = name;\n      }\n    };\n    handlersRef.current.blur = function (_ref13) {\n      var target = _ref13.target;\n      if (!isFieldElement(target)) return;\n      var _ref14 = target,\n        name = _ref14.name;\n      if (fieldsRef.current.has(name) && !controlsRef.current[name]) {\n        setTouchedMaybeValidate(name);\n        changedFieldRef.current = undefined;\n      }\n    };\n    handlersRef.current.submit = function (e) {\n      return submit(e);\n    };\n    handlersRef.current.reset = function (e) {\n      return reset(null, null, e);\n    };\n    form.addEventListener(\"input\", handlersRef.current.change);\n    form.addEventListener(\"focusout\", handlersRef.current.blur);\n    form.addEventListener(\"submit\", handlersRef.current.submit);\n    form.addEventListener(\"reset\", handlersRef.current.reset);\n    mutationObserverRef.current = new MutationObserver(function (_ref15) {\n      var type = _ref15[0].type;\n      if (type !== \"childList\") return;\n      var fields = getFields(form);\n      var values = initialStateRef.current.values;\n      fieldsRef.current.forEach(function (_, name) {\n        var _fieldsRef$current$ge3, _fieldsRef$current$ge4, _fields$get$options;\n        if (!shouldRemoveField(name)) return;\n        if (controlsRef.current[name]) return;\n        if (!fields.has(name)) {\n          removeField(name, !isFieldArray(fieldArrayRef.current, name) || isUndefined(get(initialStateRef.current.values, name.split(\".\")[0])) ? undefined : [\"defaultValue\"]);\n          return;\n        }\n        var currOptions = (_fieldsRef$current$ge3 = fieldsRef.current.get(name)) == null ? void 0 : (_fieldsRef$current$ge4 = _fieldsRef$current$ge3.options) == null ? void 0 : _fieldsRef$current$ge4.length;\n        var nextOptions = (_fields$get$options = fields.get(name).options) == null ? void 0 : _fields$get$options.length;\n        if (currOptions > nextOptions) {\n          setStateRef(\"values.\" + name, getNodeValue(name, fields), {\n            shouldSkipUpdate: true\n          });\n        } else if (currOptions < nextOptions) {\n          setNodeValue(name, get(values, name), fields);\n        }\n      });\n      var addedNodes = [];\n      fields.forEach(function (_, name) {\n        if (fieldsRef.current.has(name) || controlsRef.current[name]) return;\n        var value = get(stateRef.current.values, name);\n        if (!isUndefined(value)) values = set(values, name, value, true);\n        addedNodes.push(name);\n      });\n      fieldsRef.current = fields;\n      if (addedNodes.length) setNodesOrValues(values, {\n        fields: addedNodes\n      });\n    });\n    mutationObserverRef.current.observe(form, {\n      childList: true,\n      subtree: true\n    });\n  }, [getFields, getNodeValue, handleChangeEvent, removeField, reset, setNodeValue, setNodesOrValues, setStateRef, setTouchedMaybeValidate, shouldRemoveField, stateRef, submit]);\n  var registerField = useCallback(function (value) {\n    return function (field) {\n      if (!(field != null && field.name) || controlsRef.current[field.name] || excludeFieldsRef.current[field.name]) return;\n      if (isFunction(value)) {\n        fieldValidatorsRef.current[field.name] = value;\n        return;\n      }\n      var validator = value.validate,\n        parsers = _objectWithoutPropertiesLoose(value, _excluded2$1);\n      if (validator) fieldValidatorsRef.current[field.name] = validator;\n      fieldParsersRef.current[field.name] = parsers;\n    };\n  }, []);\n  set$1(id, {\n    validateOnChange: validateOnChange,\n    shouldRemoveField: shouldRemoveField,\n    initialStateRef: initialStateRef,\n    fieldArrayRef: fieldArrayRef,\n    controlsRef: controlsRef,\n    observersRef: observersRef,\n    fieldValidatorsRef: fieldValidatorsRef,\n    changedFieldRef: changedFieldRef,\n    setStateRef: setStateRef,\n    getNodeValue: getNodeValue,\n    getFormState: getFormState,\n    setDefaultValue: setDefaultValue,\n    setNodesOrValues: setNodesOrValues,\n    setTouchedMaybeValidate: setTouchedMaybeValidate,\n    handleChangeEvent: handleChangeEvent,\n    removeField: removeField,\n    form: registerForm,\n    field: registerField,\n    focus: focus,\n    use: use,\n    getState: getState,\n    setValue: setValue,\n    setTouched: setTouched,\n    setDirty: setDirty,\n    setError: setError,\n    clearErrors: clearErrors,\n    runValidation: runValidation,\n    reset: reset,\n    submit: submit\n  });\n  useEffect(function () {\n    return function () {\n      if (formRef.current) {\n        var _mutationObserverRef$;\n        var handlers = handlersRef.current;\n        formRef.current.removeEventListener(\"input\", handlers.change);\n        formRef.current.removeEventListener(\"focusout\", handlers.blur);\n        formRef.current.removeEventListener(\"submit\", handlers.submit);\n        formRef.current.removeEventListener(\"reset\", handlers.reset);\n        (_mutationObserverRef$ = mutationObserverRef.current) == null ? void 0 : _mutationObserverRef$.disconnect();\n      }\n      remove(id);\n    };\n  }, [id]);\n  return {\n    form: registerForm,\n    field: registerField,\n    focus: focus,\n    removeField: removeField,\n    use: use,\n    getState: getState,\n    setValue: setValue,\n    setTouched: setTouched,\n    setDirty: setDirty,\n    setError: setError,\n    clearErrors: clearErrors,\n    runValidation: runValidation,\n    reset: reset,\n    submit: submit\n  };\n};\nvar useFormMethods = function (formId) {\n  var methods = get$1(formId);\n  invariant(!methods, '💡 react-cool-form > useFormMethods: It must work with an \"useForm\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form');\n  var form = methods.form,\n    field = methods.field,\n    focus = methods.focus,\n    removeField = methods.removeField,\n    use = methods.use,\n    getState = methods.getState,\n    setValue = methods.setValue,\n    setTouched = methods.setTouched,\n    setDirty = methods.setDirty,\n    setError = methods.setError,\n    clearErrors = methods.clearErrors,\n    runValidation = methods.runValidation,\n    reset = methods.reset,\n    submit = methods.submit;\n  return {\n    form: form,\n    field: field,\n    focus: focus,\n    removeField: removeField,\n    use: use,\n    getState: getState,\n    setValue: setValue,\n    setTouched: setTouched,\n    setDirty: setDirty,\n    setError: setError,\n    clearErrors: clearErrors,\n    runValidation: runValidation,\n    reset: reset,\n    submit: submit\n  };\n};\nvar useFormState = function (path, configOrCallback, formId) {\n  var config = !isFunction(configOrCallback) ? configOrCallback : {};\n  var methods = get$1((config == null ? void 0 : config.formId) || formId);\n  invariant(!methods, \"\\uD83D\\uDCA1 react-cool-form > useFormState: It must work with an \\\"useForm\\\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form\");\n  var observerRef = useRef();\n  var _useReducer = useReducer(function (c) {\n      return c + 1;\n    }, 0),\n    forceUpdate = _useReducer[1];\n  var observersRef = methods.observersRef,\n    getFormState = methods.getFormState;\n  var _callback = isFunction(configOrCallback) ? configOrCallback : undefined;\n  useEffect(function () {\n    observersRef.current.push(observerRef.current);\n    return function () {\n      observersRef.current = observersRef.current.filter(function (o) {\n        return o !== observerRef.current;\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return getFormState(path, _extends({}, config, {\n    methodName: _callback ? \"useFormStateCallback\" : \"useFormState\",\n    callback: function callback(usedState) {\n      if (!observerRef.current) observerRef.current = {\n        usedState: usedState,\n        notify: _callback ? function (state) {\n          return _callback(parseState(path, state));\n        } : forceUpdate\n      };\n    }\n  }));\n};\nvar _excluded = [\"formId\", \"defaultValue\", \"validate\", \"parse\", \"format\", \"errorWithTouched\"],\n  _excluded2 = [\"onChange\", \"onBlur\"];\nvar useControlled = function (name, _temp) {\n  var _ref2;\n  var _ref = _temp === void 0 ? {} : _temp,\n    formId = _ref.formId,\n    defaultValue = _ref.defaultValue,\n    validate = _ref.validate,\n    parse = _ref.parse,\n    format = _ref.format,\n    errorWithTouched = _ref.errorWithTouched,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var methods = get$1(formId);\n  invariant(!methods, '💡 react-cool-form > useControlled: It must work with an \"useForm\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form');\n  var meta = useFormState({\n    value: \"values.\" + name,\n    error: \"errors.\" + name,\n    isTouched: \"touched.\" + name,\n    isDirty: \"dirty.\" + name\n  }, {\n    formId: formId,\n    errorWithTouched: errorWithTouched\n  });\n  var shouldRemoveField = methods.shouldRemoveField,\n    initialStateRef = methods.initialStateRef,\n    fieldArrayRef = methods.fieldArrayRef,\n    controlsRef = methods.controlsRef,\n    fieldValidatorsRef = methods.fieldValidatorsRef,\n    changedFieldRef = methods.changedFieldRef,\n    getState = methods.getState,\n    getNodeValue = methods.getNodeValue,\n    setDefaultValue = methods.setDefaultValue,\n    setTouchedMaybeValidate = methods.setTouchedMaybeValidate,\n    handleChangeEvent = methods.handleChangeEvent,\n    removeField = methods.removeField;\n  useEffect(function () {\n    var isFieldArr = isFieldArray(fieldArrayRef.current, name);\n    var initialVal = get(initialStateRef.current.values, name);\n    if (isUndefined(initialVal)) {\n      if (!isUndefined(defaultValue) && (!isFieldArr || !isUndefined(get(initialStateRef.current.values, name.split(\".\")[0])))) {\n        setDefaultValue(name, defaultValue);\n      } else if (!isFieldArr) {\n        warn(\"\\uD83D\\uDCA1 react-cool-form > useControlled: Please provide a default value for \\\"\" + name + \"\\\" field.\");\n      }\n    } else if (isUndefined(getState(name))) {\n      setDefaultValue(name, initialVal);\n    }\n    return function () {\n      if (shouldRemoveField(name)) removeField(name, !isFieldArr || isUndefined(\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      get(initialStateRef.current.values, name.split(\".\")[0])) ? undefined : [\"defaultValue\"]);\n    };\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  controlsRef.current[name] = true;\n  if (validate) fieldValidatorsRef.current[name] = validate;\n  var _onChange = props.onChange,\n    _onBlur = props.onBlur,\n    restProps = _objectWithoutPropertiesLoose(props, _excluded2);\n  var value = get(initialStateRef.current.values, name);\n  value = !isUndefined(value) ? value : defaultValue;\n  value = !isUndefined(meta.value) ? meta.value : value;\n  value = (_ref2 = format ? format(value) : value) != null ? _ref2 : \"\";\n  return [_extends({\n    name: name,\n    value: value,\n    onChange: function onChange() {\n      var val;\n      if (parse) {\n        val = parse.apply(void 0, arguments);\n      } else {\n        var e = arguments.length <= 0 ? undefined : arguments[0];\n        val = (e == null ? void 0 : e.nativeEvent) instanceof Event && isFieldElement(e.target) ? getNodeValue(name) : e;\n      }\n      handleChangeEvent(name, val);\n      if (_onChange) _onChange.apply(void 0, arguments);\n      changedFieldRef.current = name;\n    },\n    onBlur: function onBlur(e) {\n      setTouchedMaybeValidate(name);\n      if (_onBlur) _onBlur(e);\n      changedFieldRef.current = undefined;\n    }\n  }, restProps), {\n    error: meta.error,\n    isTouched: !!meta.isTouched,\n    isDirty: !!meta.isDirty\n  }];\n};\nvar useFieldArray = function (name, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    formId = _ref.formId,\n    defaultValue = _ref.defaultValue,\n    validate = _ref.validate;\n  var methods = get$1(formId);\n  invariant(!methods, '💡 react-cool-form > useFieldArray: It must work with an \"useForm\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form');\n  var validateOnChange = methods.validateOnChange,\n    shouldRemoveField = methods.shouldRemoveField,\n    initialStateRef = methods.initialStateRef,\n    fieldArrayRef = methods.fieldArrayRef,\n    fieldValidatorsRef = methods.fieldValidatorsRef,\n    getState = methods.getState,\n    setDefaultValue = methods.setDefaultValue,\n    setNodesOrValues = methods.setNodesOrValues,\n    setStateRef = methods.setStateRef,\n    runValidation = methods.runValidation,\n    removeField = methods.removeField;\n  var getFields = useCallback(function (init) {\n    if (init === void 0) {\n      init = false;\n    }\n    var fields = getState(name);\n    if (init && isUndefined(fields)) fields = defaultValue;\n    return Array.isArray(fields) ? fields.map(function (_, index) {\n      return name + \"[\" + index + \"]\";\n    }) : [];\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [getState, name]);\n  var _useState = useState$1(getFields(true)),\n    fields = _useState[0],\n    setFields = _useState[1];\n  var updateFields = useCallback(function () {\n    setFields(getFields());\n    setNodesOrValues(getState(\"values\"), {\n      shouldSetValues: false,\n      fields: Object.keys(fieldArrayRef.current[name].fields)\n    });\n  }, [fieldArrayRef, getFields, getState, name, setNodesOrValues]);\n  useEffect(function () {\n    if (isUndefined(get(initialStateRef.current.values, name)) && !isUndefined(defaultValue)) {\n      setDefaultValue(name, defaultValue, true);\n      updateFields();\n    }\n    return function () {\n      if (shouldRemoveField(name)) removeField(name);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (!fieldArrayRef.current[name]) fieldArrayRef.current[name] = {\n    reset: updateFields,\n    fields: {}\n  };\n  if (validate) fieldValidatorsRef.current[name] = validate;\n  var setState = useCallback(function (handler, _temp2) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      shouldTouched = _ref2.shouldTouched,\n      shouldDirty = _ref2.shouldDirty;\n    var state = getState();\n    [\"values\", \"touched\", \"errors\", \"dirty\"].forEach(function (key) {\n      var _state$values$name, _extends2;\n      var value = state[key][name];\n      var fieldsLength = (_state$values$name = state.values[name]) == null ? void 0 : _state$values$name.length;\n      if (key === \"values\" || key === \"touched\" && shouldTouched || key === \"dirty\" && shouldDirty || !isUndefined(value)) state = set(state, key, _extends({}, state[key], (_extends2 = {}, _extends2[name] = handler(Array.isArray(value) ? [].concat(value) : [], key, fieldsLength ? fieldsLength - 1 : 0), _extends2)), true);\n    });\n    setStateRef(\"\", _extends({}, state, {\n      shouldDirty: getIsDirty(state.dirty)\n    }));\n    updateFields();\n    if (validateOnChange) runValidation(name);\n  }, [getState, name, runValidation, setStateRef, updateFields, validateOnChange]);\n  var push = useCallback(function (value, _temp3) {\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      shouldTouched = _ref3.shouldTouched,\n      _ref3$shouldDirty = _ref3.shouldDirty,\n      shouldDirty = _ref3$shouldDirty === void 0 ? true : _ref3$shouldDirty;\n    var handler = function handler(f, type, lastIndex) {\n      if (lastIndex === void 0) {\n        lastIndex = 0;\n      }\n      if (type === \"values\") {\n        f.push(value);\n      } else if (type === \"touched\" && shouldTouched || type === \"dirty\" && shouldDirty) {\n        f[lastIndex] = setValuesAsTrue(value);\n      }\n      return f;\n    };\n    setState(handler, {\n      shouldTouched: shouldTouched,\n      shouldDirty: shouldDirty\n    });\n  }, [setState]);\n  var insert = useCallback(function (index, value, _temp4) {\n    var _ref4 = _temp4 === void 0 ? {} : _temp4,\n      shouldTouched = _ref4.shouldTouched,\n      _ref4$shouldDirty = _ref4.shouldDirty,\n      shouldDirty = _ref4$shouldDirty === void 0 ? true : _ref4$shouldDirty;\n    var handler = function handler(f, type) {\n      if (type === \"values\") {\n        f.splice(index, 0, value);\n      } else if (type === \"touched\" && shouldTouched || type === \"dirty\" && shouldDirty) {\n        f[index] = setValuesAsTrue(value);\n      } else if (index < f.length) {\n        f.splice(index, 0, undefined);\n      }\n      return f;\n    };\n    setState(handler, {\n      shouldTouched: shouldTouched,\n      shouldDirty: shouldDirty\n    });\n  }, [setState]);\n  var remove = useCallback(function (index) {\n    var handler = function handler(f) {\n      f.splice(index, 1);\n      return compact(f).length ? f : [];\n    };\n    var value = (getState(name) || [])[index];\n    setState(handler);\n    return value;\n  }, [getState, name, setState]);\n  var swap = useCallback(function (indexA, indexB) {\n    var handler = function handler(f) {\n      var _ref5 = [f[indexB], f[indexA]];\n      f[indexA] = _ref5[0];\n      f[indexB] = _ref5[1];\n      return f;\n    };\n    setState(handler);\n  }, [setState]);\n  var move = useCallback(function (from, to) {\n    var handler = function handler(f) {\n      f.splice(to, 0, f.splice(from, 1)[0]);\n      return f;\n    };\n    setState(handler);\n  }, [setState]);\n  return [fields, {\n    push: push,\n    insert: insert,\n    remove: remove,\n    swap: swap,\n    move: move\n  }];\n};\nexport { get, set, unset, useControlled, useFieldArray, useForm, useFormMethods, useFormState };","map":{"version":3,"names":["one","all","get$1","get","id","set$1","set","methods","remove","undefined","useLatest","val","ref","useRef","current","arrayToMap","arr","map","reduce","obj","key","isFileList","value","FileList","isObject","cloneObject","object","Event","Error","Date","getTime","Array","isArray","Object","keys","compact","filter","Boolean","isPlainObject","deepMerge","_len","arguments","length","objects","_key","prev","forEach","prevValue","currValue","concat","isUndefined","filterErrors","error","touched","nextErrors","stringToPath","str","TypeError","split","path","defaultValue","getIsDirty","dirty","search","dty","found","_i","_Object$values","values","push","getPath","some","startsWith","invariant","condition","message","process","env","NODE_ENV","isFunction","isAsyncFunction","constructor","name","isCheckboxInput","field","type","isEmptyObject","isFieldArray","fields","callback","fieldName","isFieldElement","element","test","tagName","isFileInput","isInputElement","isNumberInput","isRadioInput","isRangeInput","isSelectMultiple","isSelectOne","parseState","state","pathHandler","stateHandler","isGetState","parsedState","p","paths","s","runWithLowPriority","window","requestIdleCallback","cb","start","now","setTimeout","didTimeout","timeRemaining","Math","max","timeout","immutable","newObject","segs","slice","idx","nextIsNumber","Number","isNaN","setValuesAsTrue","unset","refObject","hasOwnProperty","last","pop","target","index","splice","t","join","warn","_console","console","apply","useState","initialState","onChange","_useReducer","useReducer","c","forceUpdate","stateRef","observersRef","usedState","notify","onChangeRef","setStateRef","useCallback","_temp","_ref","fieldPath","shouldSkipUpdate","shouldForceUpdate","dequal","_ref2","errors","prevIsDirty","isDirty","prevIsValid","isValid","prevSubmitCount","submitCount","currSubmitCount","_extends","_ref3","k","useForm","_ref$defaultValues","defaultValues","validate","_ref$validateOnChange","validateOnChange","_ref$validateOnBlur","validateOnBlur","_ref$focusOnError","focusOnError","_ref$removeOnUnmounte","removeOnUnmounted","_ref$builtInValidatio","builtInValidationMode","_ref$excludeFields","excludeFields","onReset","onSubmit","onError","onStateChange","handlersRef","mutationObserverRef","formRef","fieldsRef","Map","fieldParsersRef","fieldArrayRef","controlsRef","formValidatorRef","fieldValidatorsRef","changedFieldRef","excludeFieldsRef","onResetRef","onSubmitRef","onErrorRef","hasWarnValues","initialStateRef","isValidating","isSubmitting","isSubmitted","_useState","handleUnset","options","shift","handleFocus","_fieldsRef$current$ge","_fieldsRef$current$ge2","from","find","n","focus","getFields","form","querySelectorAll","fieldId","classList","rcfExclude","dataset","exclude","acc","elm","_acc$get","fieldArrayName","getNodeValue","_find","has","_fieldParsersRef$curr","_fieldParsersRef$curr2","valueAsNumber","valueAsDate","checkboxes","checked","checkbox","hasAttribute","radio","option","selected","files","setNodeValue","includes","setDefaultValue","shouldUpdateDefaultValue","setNodesOrValues","_temp2","_ref4","_ref4$shouldSetValues","shouldSetValues","_ref4$fields","setError","clearErrors","runBuiltInValidation","_ref5","_ref5$field","validity","validationMessage","runAllBuiltInValidation","runFieldValidation","exception","runAllFieldsValidation","promises","Promise","then","cur","runFormValidation","validateField","hasAsyncValidator","validateFieldWithLowPriority","validateForm","errs","runValidation","_temp3","_ref6","_ref6$shouldFocus","shouldFocus","names","indexOf","getFormState","_temp4","_ref7","errorWithTouched","_ref7$defaultValues","dfValues","_ref7$methodName","methodName","v","replace","delay","use","_temp5","_ref8","getState","setTouched","isTouched","_temp6","_ref9","_ref9$shouldValidate","shouldValidate","setTouchedMaybeValidate","setDirty","setDirtyIfNeeded","setValue","_temp7","_ref10","_ref10$shouldValidate","_ref10$shouldTouched","shouldTouched","_ref10$shouldDirty","shouldDirty","reset","getOptions","removeField","submit","e","preventDefault","stopPropagation","skip","nextValues","nextTouched","handleChangeEvent","shouldRemoveField","_arrayToMap","rest","_objectWithoutPropertiesLoose","_excluded$1","registerForm","el","change","_ref11","_ref12","_fieldParsersRef$curr3","parse","blur","_ref13","_ref14","addEventListener","MutationObserver","_ref15","_","_fieldsRef$current$ge3","_fieldsRef$current$ge4","_fields$get$options","currOptions","nextOptions","addedNodes","observe","childList","subtree","registerField","validator","parsers","_excluded2$1","useEffect","_mutationObserverRef$","handlers","removeEventListener","disconnect","useFormMethods","formId","useFormState","configOrCallback","config","observerRef","_callback","o","useControlled","format","props","_excluded","meta","isFieldArr","initialVal","_onChange","_onBlur","onBlur","restProps","_excluded2","nativeEvent","useFieldArray","init","useState$1","setFields","updateFields","setState","handler","_state$values$name","_extends2","fieldsLength","_ref3$shouldDirty","f","lastIndex","insert","_ref4$shouldDirty","swap","indexA","indexB","move","to"],"sources":["D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\shared.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\hooks\\useLatest.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\arrayToMap.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isFileList.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isObject.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\cloneObject.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\compact.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isPlainObject.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\deepMerge.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isUndefined.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\filterErrors.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\stringToPath.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\get.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\getIsDirty.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\getPath.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\invariant.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isFunction.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isAsyncFunction.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isCheckboxInput.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isEmptyObject.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isFieldArray.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isFieldElement.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isFileInput.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isInputElement.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isNumberInput.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isRadioInput.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isRangeInput.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isSelectMultiple.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\isSelectOne.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\parseState.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\runWithLowPriority.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\set.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\setValuesAsTrue.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\unset.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\utils\\warn.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\hooks\\useState.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\useForm.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\useFormMethods.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\useFormState.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\useControlled.ts","D:\\C notes\\Web Developement\\REELO\\frontend\\my-react-app\\node_modules\\react-cool-form\\src\\useFieldArray.ts"],"sourcesContent":["import { Methods, ObjMap } from \"./types\";\n\nlet one: Methods | undefined;\nconst all: ObjMap<Methods> = {};\n\nexport const get = (id?: string): Methods => (id ? all[id] : (one as Methods));\n\nexport const set = (id: string | undefined, methods: Methods): void => {\n  if (id) {\n    all[id] = methods;\n  } else {\n    one = methods;\n  }\n};\n\nexport const remove = (id?: string): void => {\n  if (id) {\n    delete all[id];\n  } else {\n    one = undefined;\n  }\n};\n","import { MutableRefObject, useRef } from \"react\";\n\nexport default <T>(val: T): MutableRefObject<T> => {\n  const ref = useRef(val);\n  ref.current = val;\n  return ref;\n};\n","import { ObjMap } from \"../types\";\n\nexport default (arr: any[], map: Record<string, string> = {}): ObjMap =>\n  arr.reduce((obj, key) => {\n    obj[map[key] || key] = true;\n    return obj;\n  }, {});\n","export default (value: unknown): value is FileList => value instanceof FileList;\n","export default (value: unknown): value is Object =>\n  value !== null && typeof value === \"object\";\n","import isFileList from \"./isFileList\";\nimport isObject from \"./isObject\";\n\nconst cloneObject = (object: unknown): any => {\n  if (object instanceof Event) throw new Error(\"Unable to clone event.\");\n\n  if (!isObject(object) || isFileList(object)) return object;\n\n  if (object instanceof Date) return new Date(object.getTime());\n\n  if (Array.isArray(object)) return object.map((val) => cloneObject(val));\n\n  return Object.keys(object).reduce((obj: Record<string, any>, key) => {\n    obj[key] = cloneObject((object as Record<string, any>)[key]);\n    return obj;\n  }, {});\n};\n\nexport default cloneObject;\n","export default (arr: any[]): any[] => arr.filter(Boolean);\n","import isObject from \"./isObject\";\n\nexport default (value: unknown): value is Object =>\n  !Array.isArray(value) && !(value instanceof Date) && isObject(value);\n","import isPlainObject from \"./isPlainObject\";\n\nconst deepMerge = (...objects: any[]): any =>\n  objects.reduce((prev, obj) => {\n    Object.keys(obj).forEach((key) => {\n      const prevValue = prev[key];\n      const currValue = obj[key];\n\n      if (Array.isArray(prevValue) && Array.isArray(currValue)) {\n        prev[key] = [...prevValue, ...currValue];\n      } else if (isPlainObject(prevValue) && isPlainObject(currValue)) {\n        prev[key] = deepMerge(prevValue, currValue);\n      } else {\n        prev[key] = currValue;\n      }\n    });\n\n    return prev;\n  }, {});\n\nexport default deepMerge;\n","export default (value: unknown): value is undefined => value === undefined;\n","import { ObjMap } from \"../types\";\nimport isPlainObject from \"./isPlainObject\";\nimport isUndefined from \"./isUndefined\";\n\nconst filterErrors = (error: unknown, touched: unknown): any => {\n  if (!isPlainObject(error)) return touched ? error : undefined;\n\n  return Object.keys(error).reduce((obj: ObjMap<any>, key) => {\n    const nextErrors = filterErrors(\n      (error as ObjMap<any>)[key],\n      (touched as ObjMap<any>)[key] || false\n    );\n\n    if (!isUndefined(nextErrors)) {\n      obj[key] = nextErrors;\n    } else {\n      delete obj[key];\n    }\n\n    return obj;\n  }, {});\n};\n\nexport default filterErrors;\n","import compact from \"./compact\";\n\nexport default (str: string): string[] => {\n  if (typeof str !== \"string\") throw new TypeError(\"Expected a string.\");\n  if (!str.length) return [];\n\n  return compact(str.split(/[.[\\]]+/));\n};\n","import isPlainObject from \"./isPlainObject\";\nimport isUndefined from \"./isUndefined\";\nimport stringToPath from \"./stringToPath\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default (object: any, path: string, defaultValue?: unknown): any => {\n  if (!isPlainObject(object) || !path) return defaultValue;\n\n  const value = stringToPath(path).reduce(\n    (obj, key) => (obj || {})[key],\n    object\n  );\n\n  return !isUndefined(value) ? value : defaultValue;\n};\n","import isObject from \"./isObject\";\n\nexport default (dirty: object): boolean => {\n  const search = (dty: object, found: any[] = []) => {\n    for (const val of Object.values(dty)) {\n      if (val === true) {\n        found.push(val);\n        return found;\n      }\n\n      if (isObject(val)) search(val, found);\n    }\n\n    return found;\n  };\n\n  return !!search(dirty).length;\n};\n","export default (path: string): string =>\n  ![\n    \"values\",\n    \"touched\",\n    \"errors\",\n    \"isDirty\",\n    \"dirty\",\n    \"isValidating\",\n    \"isValid\",\n    \"isSubmitting\",\n    \"isSubmitted\",\n    \"submitCount\",\n  ].some((key) => path.startsWith(key))\n    ? `values.${path}`\n    : path;\n","export default (condition: boolean, message: string): void => {\n  if (__DEV__ && condition) throw new Error(message);\n};\n","export default (value: unknown): value is Function =>\n  typeof value === \"function\";\n","import isFunction from \"./isFunction\";\n\nexport default (value: unknown): value is Promise<any> =>\n  isFunction(value) && value.constructor.name === \"AsyncFunction\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"checkbox\";\n","import { ObjMap } from \"../types\";\nimport isPlainObject from \"./isPlainObject\";\n\nexport default (value: unknown): value is ObjMap<never> =>\n  isPlainObject(value) && !Object.keys(value).length;\n","import { FieldArray } from \"../types\";\n\nexport default (\n  fields: FieldArray,\n  name: string,\n  callback?: (key: string) => void\n): string | void => {\n  let fieldName;\n\n  Object.keys(fields).some((key) => {\n    if (name.startsWith(key)) {\n      fieldName = key;\n      if (callback) callback(key);\n      return true;\n    }\n    return false;\n  });\n\n  return fieldName;\n};\n","import { FieldElement } from \"../types\";\n\nexport default (element: HTMLElement): element is FieldElement =>\n  /INPUT|TEXTAREA|SELECT/.test(element.tagName);\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"file\";\n","export default (element: HTMLElement): element is HTMLInputElement =>\n  element.tagName === \"INPUT\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"number\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"radio\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"range\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLSelectElement =>\n  field.type === \"select-multiple\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLSelectElement =>\n  field.type === \"select-one\";\n","import { FormState, ObjMap, Path } from \"../types\";\nimport get from \"./get\";\nimport getPath from \"./getPath\";\nimport isPlainObject from \"./isPlainObject\";\n\nexport default (\n  path: Path | undefined,\n  state: FormState,\n  pathHandler = getPath,\n  stateHandler?: (path: string, state: any) => any,\n  isGetState?: boolean\n): any => {\n  if (!path) return isGetState ? state : undefined;\n\n  let parsedState;\n\n  if (Array.isArray(path)) {\n    parsedState = path.map((p) => {\n      p = pathHandler(p);\n      const value = get(state, p);\n      return stateHandler ? stateHandler(p, value) : value;\n    });\n  } else if (isPlainObject(path)) {\n    const paths = path as ObjMap<string>;\n    parsedState = Object.keys(paths).reduce((s: ObjMap<any>, key) => {\n      path = pathHandler(paths[key]);\n      const value = get(state, path);\n      s[key] = stateHandler ? stateHandler(path, value) : value;\n      return s;\n    }, {});\n  } else {\n    path = pathHandler(path);\n    const value = get(state, path);\n    parsedState = stateHandler ? stateHandler(path, value) : value;\n  }\n\n  return parsedState;\n};\n","export default (callback: (args: any) => any): any =>\n  (\n    window.requestIdleCallback ||\n    ((cb) => {\n      const start = Date.now();\n      return setTimeout(\n        () =>\n          cb({\n            didTimeout: false,\n            timeRemaining: /* istanbul ignore next */ () =>\n              Math.max(0, 50 - (Date.now() - start)),\n          }),\n        1\n      );\n    })\n  )(callback, { timeout: 2000 });\n","import cloneObject from \"./cloneObject\";\nimport isPlainObject from \"./isPlainObject\";\nimport stringToPath from \"./stringToPath\";\n\nexport default (\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  object: any,\n  path: string,\n  value: unknown,\n  immutable?: boolean\n): any => {\n  if (!isPlainObject(object)) throw new TypeError(\"Expected an object.\");\n\n  const newObject = immutable ? cloneObject(object) : object;\n  const segs = stringToPath(path);\n\n  segs.slice(0, -1).reduce((obj, key, idx) => {\n    const nextIsNumber = !Number.isNaN(+segs[idx + 1]);\n    if (\n      (isPlainObject(obj[key]) && !nextIsNumber) ||\n      (Array.isArray(obj[key]) && nextIsNumber)\n    )\n      return obj[key];\n    obj[key] = nextIsNumber ? [] : {};\n    return obj[key];\n  }, newObject)[segs[segs.length - 1] || \"\"] = value;\n\n  return newObject;\n};\n","import isPlainObject from \"./isPlainObject\";\n\nconst setValuesAsTrue = (object: unknown): any => {\n  if (!Array.isArray(object) && !isPlainObject(object)) return true;\n\n  if (Array.isArray(object)) return object.map((val) => setValuesAsTrue(val));\n\n  return Object.keys(object).reduce((obj: Record<string, any>, key) => {\n    obj[key] = setValuesAsTrue((object as Record<string, any>)[key]);\n    return obj;\n  }, {});\n};\n\nexport default setValuesAsTrue;\n","import cloneObject from \"./cloneObject\";\nimport isEmptyObject from \"./isEmptyObject\";\nimport isPlainObject from \"./isPlainObject\";\nimport isUndefined from \"./isUndefined\";\nimport stringToPath from \"./stringToPath\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst unset = (object: any, path: string, immutable?: boolean): any => {\n  if (!isPlainObject(object)) throw new TypeError(\"Expected an object.\");\n\n  const refObject = immutable ? cloneObject(object) : object;\n  const newObject = refObject;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (newObject.hasOwnProperty(path)) {\n    delete newObject[path];\n    return refObject;\n  }\n\n  const segs = stringToPath(path);\n\n  if (!segs.length) return refObject;\n\n  const last = segs.pop() as string;\n  const target = segs.reduce((obj, key) => (obj || {})[key], newObject);\n\n  if (Array.isArray(target)) {\n    let index = +last;\n\n    if (index < target.length - 1) {\n      delete target[index];\n    } else {\n      while (index >= 0) {\n        // @ts-expect-error\n        if (index == last || isUndefined(target[index])) {\n          target.splice(index, 1);\n          index -= 1;\n        } else {\n          break;\n        }\n      }\n    }\n  } else if (isPlainObject(target)) {\n    delete target[last];\n  }\n\n  return isEmptyObject(target) ||\n    (Array.isArray(target) && !target.filter((t) => !isUndefined(t)).length)\n    ? unset(refObject, segs.join(\".\"))\n    : refObject;\n};\n\nexport default unset;\n","export default (...args: any[]): void => {\n  if (__DEV__) console.warn(...args);\n};\n","import { useReducer, useRef, useCallback } from \"react\";\nimport { dequal } from \"dequal/lite\";\n\nimport {\n  FormState,\n  FormStateReturn,\n  Observer,\n  OnStateChange,\n  SetStateRef,\n} from \"../types\";\nimport useLatest from \"./useLatest\";\nimport { get, getIsDirty, isEmptyObject, set } from \"../utils\";\n\nexport default <V>(\n  initialState: FormState<V>,\n  onChange?: OnStateChange<V>\n): FormStateReturn<V> => {\n  const [, forceUpdate] = useReducer((c) => c + 1, 0);\n  const stateRef = useRef(initialState);\n  const observersRef = useRef<Observer<V>[]>([\n    { usedState: {}, notify: forceUpdate },\n  ]);\n  const onChangeRef = useLatest(onChange || (() => undefined));\n\n  const setStateRef = useCallback<SetStateRef>(\n    (path, value, { fieldPath, shouldSkipUpdate, shouldForceUpdate } = {}) => {\n      const key = path.split(\".\")[0];\n\n      if (!key) {\n        if (!dequal(stateRef.current, value)) {\n          stateRef.current = value;\n          onChangeRef.current(stateRef.current);\n\n          observersRef.current.forEach(\n            ({ usedState, notify }) =>\n              !isEmptyObject(usedState) && notify(stateRef.current)\n          );\n        }\n\n        return;\n      }\n\n      if (\n        (path !== \"values\" && key === \"values\") ||\n        !dequal(get(stateRef.current, path), value)\n      ) {\n        const state = set(stateRef.current, path, value, true);\n        const {\n          errors,\n          dirty,\n          isDirty: prevIsDirty,\n          isValid: prevIsValid,\n          submitCount: prevSubmitCount,\n        } = state;\n        let { submitCount: currSubmitCount } = state;\n        const isDirty = key === \"dirty\" ? getIsDirty(dirty) : prevIsDirty;\n        const isValid = key === \"errors\" ? isEmptyObject(errors) : prevIsValid;\n        const submitCount =\n          key === \"isSubmitting\" && value\n            ? (currSubmitCount += 1)\n            : currSubmitCount;\n\n        stateRef.current = { ...state, isDirty, isValid, submitCount };\n        onChangeRef.current(stateRef.current);\n\n        if (shouldSkipUpdate) return;\n\n        path = fieldPath || path;\n        observersRef.current.forEach(\n          ({ usedState, notify }) =>\n            (shouldForceUpdate ||\n              Object.keys(usedState).some(\n                (k) => path.startsWith(k) || k.startsWith(path)\n              ) ||\n              (usedState.isDirty && isDirty !== prevIsDirty) ||\n              (usedState.isValid && isValid !== prevIsValid) ||\n              (usedState.submitCount && submitCount !== prevSubmitCount)) &&\n            notify(stateRef.current)\n        );\n      }\n    },\n    [onChangeRef]\n  );\n\n  return { stateRef, setStateRef, observersRef };\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { dequal } from \"dequal/lite\";\n\nimport * as shared from \"./shared\";\nimport {\n  ClearErrors,\n  FieldArray,\n  FieldElement,\n  Fields,\n  FieldValidator,\n  Focus,\n  FormConfig,\n  FormErrors,\n  FormMethods,\n  FormState,\n  FormValues,\n  GetFormState,\n  GetNodeValue,\n  GetState,\n  HandleChangeEvent,\n  Handlers,\n  ObjMap,\n  Parsers,\n  RegisterField,\n  RegisterForm,\n  RemoveField,\n  Reset,\n  RunValidation,\n  SetDefaultValue,\n  SetDirty,\n  SetError,\n  SetNodesOrValues,\n  SetTouched,\n  SetTouchedMaybeValidate,\n  SetValue,\n  ShouldRemoveField,\n  Submit,\n  Use,\n} from \"./types\";\nimport { useLatest, useState } from \"./hooks\";\nimport {\n  arrayToMap,\n  compact,\n  deepMerge,\n  filterErrors,\n  get,\n  getPath,\n  isAsyncFunction,\n  isCheckboxInput,\n  isEmptyObject,\n  isFieldArray,\n  isFieldElement,\n  isFileInput,\n  isFileList,\n  isFunction,\n  isInputElement,\n  isNumberInput,\n  isPlainObject,\n  isRadioInput,\n  isRangeInput,\n  isSelectMultiple,\n  isSelectOne,\n  isUndefined,\n  parseState,\n  runWithLowPriority,\n  set,\n  unset,\n  warn,\n} from \"./utils\";\n\nexport default <V extends FormValues = FormValues>({\n  id,\n  defaultValues = {} as V,\n  validate,\n  validateOnChange = true,\n  validateOnBlur = true,\n  focusOnError = true,\n  removeOnUnmounted = true,\n  builtInValidationMode = \"message\",\n  excludeFields = [],\n  onReset,\n  onSubmit,\n  onError,\n  onStateChange,\n}: FormConfig<V> = {}): FormMethods<V> => {\n  const handlersRef = useRef<Handlers>({});\n  const mutationObserverRef = useRef<MutationObserver>();\n  const formRef = useRef<HTMLElement>();\n  const fieldsRef = useRef<Fields>(new Map());\n  const fieldParsersRef = useRef<Parsers>({});\n  const fieldArrayRef = useRef<FieldArray>({});\n  const controlsRef = useRef<ObjMap>({});\n  const formValidatorRef = useLatest(validate);\n  const fieldValidatorsRef = useRef<ObjMap<FieldValidator<V>>>({});\n  const changedFieldRef = useRef<string>();\n  const excludeFieldsRef = useRef<ObjMap>(arrayToMap(excludeFields));\n  const onResetRef = useLatest(onReset || (() => undefined));\n  const onSubmitRef = useLatest(onSubmit || (() => undefined));\n  const onErrorRef = useLatest(onError || (() => undefined));\n  const hasWarnValues = useRef(false);\n  const initialStateRef = useRef<FormState<V>>({\n    values: defaultValues,\n    touched: {},\n    errors: {},\n    isDirty: false,\n    dirty: {},\n    isValidating: false,\n    isValid: true,\n    isSubmitting: false,\n    isSubmitted: false,\n    submitCount: 0,\n  });\n  const { stateRef, setStateRef, observersRef } = useState<V>(\n    { ...initialStateRef.current },\n    onStateChange\n  );\n\n  const handleUnset = useCallback(\n    (\n      path: string,\n      options?: { shouldSkipUpdate?: boolean; shouldForceUpdate?: boolean }\n    ) => {\n      const segs = path.split(\".\");\n      const k = segs.shift() as string;\n      setStateRef(\n        k,\n        unset(stateRef.current[k as keyof FormState<V>], segs.join(\".\"), true),\n        { fieldPath: path, ...options }\n      );\n    },\n    [setStateRef, stateRef]\n  );\n\n  const handleFocus = useCallback((name: string) => {\n    const field =\n      fieldsRef.current.get(name)?.field ||\n      fieldsRef.current.get(\n        Array.from(fieldsRef.current.keys()).find((n) => n.startsWith(name)) ||\n          \"\"\n      )?.field;\n\n    if (field && isFunction(field.focus)) field.focus();\n  }, []);\n\n  const getFields = useCallback(\n    (form: HTMLElement) =>\n      Array.from(form.querySelectorAll(\"input,textarea,select\"))\n        .filter((element) => {\n          const field = element as FieldElement;\n          const {\n            type,\n            name,\n            id: fieldId,\n            classList,\n            dataset: { rcfExclude },\n          } = field;\n          const { current: exclude } = excludeFieldsRef;\n\n          if (\n            /button|image|submit|reset/.test(type) ||\n            (fieldId && exclude[`#${fieldId}`]) ||\n            Array.from(classList).find((n) => exclude[`.${n}`])\n          )\n            return false;\n\n          if (rcfExclude !== \"true\" && !name) {\n            warn(\n              '💡 react-cool-form > field: Missing \"name\" attribute. Do you want to exclude the field? See: https://react-cool-form.netlify.app/docs/api-reference/use-form/#excludefields'\n            );\n            return false;\n          }\n\n          return (\n            controlsRef.current[name] ||\n            (rcfExclude !== \"true\" && !exclude[name])\n          );\n        })\n        .reduce((acc, elm) => {\n          const field = elm as FieldElement;\n          const { name } = field;\n          const fieldArrayName = isFieldArray(fieldArrayRef.current, name);\n\n          if (fieldArrayName)\n            fieldArrayRef.current[fieldArrayName].fields[name] = true;\n\n          acc.set(name, {\n            ...acc.get(name),\n            field: acc.get(name)?.field || field,\n          });\n\n          if (isCheckboxInput(field) || isRadioInput(field)) {\n            acc.get(name).options = acc.get(name).options\n              ? [...acc.get(name).options, field]\n              : [field];\n          } else if (isSelectOne(field) || isSelectMultiple(field)) {\n            acc.get(name).options = Array.from(field.options);\n          }\n\n          return acc;\n        }, new Map()),\n    []\n  );\n\n  const getNodeValue = useCallback<GetNodeValue>(\n    (name, fields = fieldsRef.current) => {\n      if (!fields.has(name)) return undefined;\n\n      const { field, options } = fields.get(name)!;\n\n      if (isInputElement(field)) {\n        if (fieldParsersRef.current[name]?.valueAsNumber)\n          return field.valueAsNumber;\n        if (fieldParsersRef.current[name]?.valueAsDate)\n          return field.valueAsDate;\n      }\n\n      if (isNumberInput(field) || isRangeInput(field))\n        return field.valueAsNumber || \"\";\n\n      if (isCheckboxInput(field)) {\n        const checkboxes = options as HTMLInputElement[];\n\n        if (checkboxes.length > 1)\n          return checkboxes.filter((c) => c.checked).map((c) => c.value);\n\n        const checkbox = checkboxes[0];\n\n        if (checkbox.hasAttribute(\"value\") && checkbox.value)\n          return checkbox.checked ? [checkbox.value] : [];\n\n        return checkbox.checked;\n      }\n\n      if (isRadioInput(field))\n        return (\n          (options as HTMLInputElement[]).find((radio) => radio.checked)\n            ?.value || \"\"\n        );\n\n      if (isSelectMultiple(field))\n        return (options as HTMLOptionElement[])\n          .filter((option) => option.selected)\n          .map((option) => option.value);\n\n      if (isFileInput(field)) return field.files;\n\n      return field.value;\n    },\n    []\n  );\n\n  const setNodeValue = useCallback(\n    (name: string, value: any, fields: Fields = fieldsRef.current) => {\n      if (!fields.has(name) || controlsRef.current[name]) return;\n\n      const { field, options } = fields.get(name)!;\n\n      if (isCheckboxInput(field)) {\n        const checkboxes = options as HTMLInputElement[];\n\n        if (checkboxes.length > 1) {\n          checkboxes.forEach((checkbox) => {\n            checkbox.checked = Array.isArray(value)\n              ? value.includes(checkbox.value)\n              : !!value;\n          });\n        } else {\n          checkboxes[0].checked = !!value;\n        }\n      } else if (isRadioInput(field)) {\n        (options as HTMLInputElement[]).forEach((radio) => {\n          radio.checked = radio.value === value;\n        });\n      } else if (isSelectMultiple(field) && Array.isArray(value)) {\n        (options as HTMLOptionElement[]).forEach((option) => {\n          option.selected = !!value.includes(option.value);\n        });\n      } else if (isFileInput(field)) {\n        if (isFileList(value)) field.files = value;\n        if (!value) field.value = \"\";\n      } else {\n        field.value = value ?? \"\";\n      }\n    },\n    []\n  );\n\n  const setDefaultValue = useCallback<SetDefaultValue>(\n    (\n      name,\n      value,\n      shouldUpdateDefaultValue = !isFieldArray(fieldArrayRef.current, name) ||\n        !isUndefined(get(initialStateRef.current.values, name.split(\".\")[0]))\n    ) => {\n      if (shouldUpdateDefaultValue)\n        initialStateRef.current.values = set(\n          initialStateRef.current.values,\n          name,\n          value,\n          true\n        );\n\n      if (!dequal(get(stateRef.current.values, name), value))\n        setStateRef(`values.${name}`, value, { shouldSkipUpdate: true });\n    },\n    [setStateRef, stateRef]\n  );\n\n  const setNodesOrValues = useCallback<SetNodesOrValues<V>>(\n    (\n      values,\n      {\n        shouldSetValues = true,\n        fields = Array.from(fieldsRef.current.keys()),\n      } = {}\n    ) =>\n      fields.forEach((name) => {\n        if (controlsRef.current[name]) return;\n\n        const value = get(values, name);\n\n        if (!isUndefined(value)) setNodeValue(name, value);\n\n        if (shouldSetValues)\n          setDefaultValue(\n            name,\n            !isUndefined(value) ? value : getNodeValue(name)\n          );\n      }),\n    [getNodeValue, setDefaultValue, setNodeValue]\n  );\n\n  const setError = useCallback<SetError>(\n    (name, error) => {\n      error = isFunction(error)\n        ? error(get(stateRef.current.errors, name))\n        : error;\n\n      if (error) {\n        setStateRef(`errors.${name}`, error);\n      } else {\n        handleUnset(`errors.${name}`);\n      }\n    },\n    [handleUnset, setStateRef, stateRef]\n  );\n\n  const clearErrors = useCallback<ClearErrors>(\n    (name) => {\n      if (!name) {\n        setStateRef(\"errors\", {});\n      } else if (Array.isArray(name)) {\n        name.forEach((n) => setError(n));\n      } else {\n        setError(name);\n      }\n    },\n    [setError, setStateRef]\n  );\n\n  const runBuiltInValidation = useCallback(\n    (name: string) => {\n      if (builtInValidationMode === false || !fieldsRef.current.has(name))\n        return undefined;\n\n      const {\n        field: { validity, validationMessage },\n      } = fieldsRef.current.get(name)!;\n\n      if (builtInValidationMode === \"state\")\n        for (const k in validity)\n          if (k !== \"valid\" && validity[k as keyof ValidityState]) return k;\n\n      return validationMessage;\n    },\n    [builtInValidationMode]\n  );\n\n  const runAllBuiltInValidation = useCallback(() => {\n    if (builtInValidationMode === false) return {};\n\n    return Array.from(fieldsRef.current.keys()).reduce((errors, name) => {\n      const error = runBuiltInValidation(name);\n      errors = { ...errors, ...(error ? set(errors, name, error) : {}) };\n      return errors;\n    }, {});\n  }, [builtInValidationMode, runBuiltInValidation]);\n\n  const runFieldValidation = useCallback(\n    async (name: string): Promise<any> => {\n      const value = get(stateRef.current.values, name);\n\n      if (!fieldValidatorsRef.current[name] || isUndefined(value))\n        return undefined;\n\n      try {\n        const error = await fieldValidatorsRef.current[name](\n          value,\n          stateRef.current.values\n        );\n\n        return error;\n      } catch (exception) {\n        warn(`💡 react-cool-form > validate ${name}: `, exception);\n        throw exception;\n      }\n    },\n    [stateRef]\n  );\n\n  const runAllFieldsValidation = useCallback((): Promise<FormErrors<V>> => {\n    const promises = Object.keys(fieldValidatorsRef.current).map((name) =>\n      runFieldValidation(name)\n    );\n\n    return Promise.all(promises).then((errors) =>\n      Object.keys(fieldValidatorsRef.current).reduce((acc, cur, idx) => {\n        acc = { ...acc, ...(errors[idx] ? set(acc, cur, errors[idx]) : {}) };\n        return acc;\n      }, {})\n    );\n  }, [runFieldValidation]);\n\n  const runFormValidation = useCallback(\n    async (name?: string): Promise<any> => {\n      if (!formValidatorRef.current) return name ? undefined : {};\n\n      try {\n        const errors = await formValidatorRef.current(stateRef.current.values);\n\n        if (name) return get(errors, name);\n\n        return isPlainObject(errors) ? errors : {};\n      } catch (exception) {\n        warn(`💡 react-cool-form > validate form: `, exception);\n        throw exception;\n      }\n    },\n    [formValidatorRef, stateRef]\n  );\n\n  const validateField = useCallback(\n    async (name: string) => {\n      const hasAsyncValidator =\n        isAsyncFunction(formValidatorRef.current) ||\n        isAsyncFunction(fieldValidatorsRef.current[name]);\n\n      if (hasAsyncValidator) setStateRef(\"isValidating\", true);\n\n      try {\n        const error =\n          (await runFormValidation(name)) ||\n          (await runFieldValidation(name)) ||\n          runBuiltInValidation(name);\n\n        setError(name, error);\n        if (hasAsyncValidator) setStateRef(\"isValidating\", false);\n\n        return error;\n      } catch (exception) {\n        return exception;\n      }\n    },\n    [\n      formValidatorRef,\n      runBuiltInValidation,\n      runFieldValidation,\n      runFormValidation,\n      setError,\n      setStateRef,\n    ]\n  );\n\n  const validateFieldWithLowPriority = useCallback<typeof validateField>(\n    (name) => runWithLowPriority(() => validateField(name)),\n    [validateField]\n  );\n\n  const validateForm = useCallback((): Promise<FormErrors<V>> => {\n    setStateRef(\"isValidating\", true);\n\n    return Promise.all([\n      runAllBuiltInValidation(),\n      runAllFieldsValidation(),\n      runFormValidation(),\n    ]).then((errors) => {\n      const errs = deepMerge(...errors);\n\n      setStateRef(\"errors\", errs);\n      setStateRef(\"isValidating\", false);\n\n      return errs;\n    });\n  }, [\n    runAllBuiltInValidation,\n    runAllFieldsValidation,\n    runFormValidation,\n    setStateRef,\n  ]);\n\n  const runValidation = useCallback<RunValidation>(\n    (name, { shouldFocus = focusOnError } = {}) => {\n      let names: string[] = [];\n\n      if (shouldFocus) {\n        names = Array.isArray(shouldFocus)\n          ? shouldFocus\n          : Array.from(fieldsRef.current.keys());\n        names = isFunction(shouldFocus) ? shouldFocus(names) : names;\n      }\n\n      if (!name)\n        return validateForm().then((errors) => {\n          if (shouldFocus) {\n            const fieldName = names.find((n) => get(errors, n));\n            if (fieldName) handleFocus(fieldName);\n          }\n\n          return isEmptyObject(errors);\n        });\n\n      if (Array.isArray(name))\n        return Promise.all(name.map((n) => validateField(n))).then((errors) => {\n          if (shouldFocus) {\n            const fieldName = names.find((n) => !!errors[name.indexOf(n)]);\n            if (fieldName) handleFocus(fieldName);\n          }\n\n          return !compact(errors).length;\n        });\n\n      return validateField(name).then((error) => {\n        if (shouldFocus && error && names.includes(name)) handleFocus(name);\n\n        return !error;\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [handleFocus, validateField, validateForm]\n  );\n\n  const getFormState = useCallback<GetFormState<V>>(\n    (\n      path,\n      {\n        errorWithTouched,\n        defaultValues: dfValues = {},\n        methodName = \"getState\",\n        callback,\n      } = {}\n    ) => {\n      const usedState: ObjMap = {};\n      const state = parseState(\n        path,\n        stateRef.current,\n        (p) => {\n          p = getPath(p);\n\n          if (methodName !== \"getState\") {\n            if (\n              p === \"values\" &&\n              methodName !== \"useFormStateCallback\" &&\n              !hasWarnValues.current\n            ) {\n              warn(\n                `💡 react-cool-form > ${methodName}: Getting \"values\" alone might cause unnecessary re-renders. If you know what you're doing, just ignore this warning. See: https://react-cool-form.netlify.app/docs/getting-started/form-state#best-practices`\n              );\n              hasWarnValues.current = true;\n            }\n\n            usedState[p] = true;\n          }\n\n          return p;\n        },\n        (p, v) => {\n          if (methodName === \"getState\") return v;\n\n          if (p.startsWith(\"values\")) {\n            if (!isUndefined(v)) return v;\n\n            p = p.replace(\"values.\", \"\");\n            v = get(initialStateRef.current, p);\n\n            return !isUndefined(v) ? v : get(dfValues, p);\n          }\n\n          if (!errorWithTouched || !p.startsWith(\"errors\")) return v;\n\n          p = p.replace(\"errors\", \"touched\");\n          usedState[p] = true;\n\n          return filterErrors(v, get(stateRef.current, p));\n        },\n        methodName === \"getState\"\n      );\n\n      if (callback) callback(usedState);\n\n      return state;\n    },\n    [stateRef]\n  );\n\n  const focus = useCallback<Focus>(\n    (name, delay) => {\n      if (!isUndefined(delay)) {\n        setTimeout(() => handleFocus(name), delay);\n      } else {\n        handleFocus(name);\n      }\n    },\n    [handleFocus]\n  );\n\n  const use = useCallback<Use<V>>(\n    (path, { errorWithTouched, defaultValues: dfValues } = {}) =>\n      getFormState(path, {\n        errorWithTouched,\n        defaultValues: dfValues,\n        methodName: \"use\",\n        callback: (usedState) => {\n          observersRef.current[0].usedState = {\n            ...observersRef.current[0].usedState,\n            ...usedState,\n          };\n        },\n      }),\n    [getFormState, observersRef]\n  );\n\n  const getState = useCallback<GetState>(\n    (path) => getFormState(path),\n    [getFormState]\n  );\n\n  const setTouched = useCallback<SetTouched>(\n    (name, isTouched = true, { shouldValidate = validateOnBlur } = {}) => {\n      if (isTouched) {\n        setStateRef(`touched.${name}`, true);\n      } else {\n        handleUnset(`touched.${name}`);\n      }\n\n      if (shouldValidate) validateFieldWithLowPriority(name);\n    },\n    [handleUnset, setStateRef, validateFieldWithLowPriority, validateOnBlur]\n  );\n\n  const setTouchedMaybeValidate = useCallback<SetTouchedMaybeValidate>(\n    (name) =>\n      setTouched(name, true, {\n        shouldValidate: validateOnChange\n          ? name !== changedFieldRef.current\n          : undefined,\n      }),\n    [setTouched, validateOnChange]\n  );\n\n  const setDirty = useCallback<SetDirty>(\n    (name, isDirty = true) => {\n      if (isDirty) {\n        setStateRef(`dirty.${name}`, true);\n      } else {\n        handleUnset(`dirty.${name}`);\n      }\n    },\n    [handleUnset, setStateRef]\n  );\n\n  const setDirtyIfNeeded = useCallback(\n    (name: string) =>\n      setDirty(\n        name,\n        !dequal(\n          get(stateRef.current.values, name),\n          get(initialStateRef.current.values, name)\n        )\n      ),\n    [setDirty, stateRef]\n  );\n\n  const setValue = useCallback<SetValue>(\n    (\n      name,\n      value,\n      {\n        shouldValidate = validateOnChange,\n        shouldTouched = true,\n        shouldDirty = true,\n      } = {}\n    ) => {\n      value = isFunction(value)\n        ? value(get(stateRef.current.values, name))\n        : value;\n\n      if (!isUndefined(value)) {\n        setStateRef(`values.${name}`, value);\n      } else {\n        handleUnset(`values.${name}`);\n      }\n      setNodeValue(name, value);\n\n      isFieldArray(fieldArrayRef.current, name, (key) =>\n        fieldArrayRef.current[key].reset()\n      );\n\n      if (shouldTouched) setTouched(name, true, { shouldValidate: false });\n      if (shouldDirty) setDirtyIfNeeded(name);\n      if (shouldValidate) validateFieldWithLowPriority(name);\n    },\n    [\n      handleUnset,\n      setDirtyIfNeeded,\n      setNodeValue,\n      setStateRef,\n      setTouched,\n      stateRef,\n      validateFieldWithLowPriority,\n      validateOnChange,\n    ]\n  );\n\n  const getOptions = useCallback(\n    () => ({\n      getState,\n      setValue,\n      setTouched,\n      setDirty,\n      setError,\n      clearErrors,\n      runValidation,\n      removeField,\n      focus,\n      reset,\n      submit,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const reset: Reset<V> = useCallback(\n    (values, exclude, e) => {\n      if (e?.preventDefault) e.preventDefault();\n      if (e?.stopPropagation) e.stopPropagation();\n\n      const state = { ...stateRef.current };\n      const skip = arrayToMap(exclude || []);\n\n      Object.keys(state).forEach((key) => {\n        if (skip[key]) return;\n\n        if (key === \"values\") {\n          const nextValues =\n            (isFunction(values) ? values(stateRef.current.values) : values) ||\n            initialStateRef.current.values;\n\n          state[key] = nextValues;\n          initialStateRef.current.values = nextValues;\n          setNodesOrValues(nextValues, {\n            shouldSetValues: false,\n            fields: Array.from(fieldsRef.current.keys()).filter(\n              (name) => !isFieldArray(fieldArrayRef.current, name)\n            ),\n          });\n        } else {\n          // @ts-expect-error\n          state[key] = initialStateRef.current[key];\n        }\n      });\n\n      setStateRef(\"\", state);\n      onResetRef.current(state.values, getOptions(), e);\n\n      Object.values(fieldArrayRef.current).forEach((field) => field.reset());\n    },\n    [getOptions, onResetRef, setNodesOrValues, setStateRef, stateRef]\n  );\n\n  const submit: Submit<V> = useCallback(\n    async (e) => {\n      if (e?.preventDefault) e.preventDefault();\n      if (e?.stopPropagation) e.stopPropagation();\n\n      const nextTouched = [\n        ...Array.from(fieldsRef.current.keys()),\n        ...Object.keys(controlsRef.current),\n      ].reduce((touched, name) => {\n        touched = set(touched, name, true, true);\n        return touched;\n      }, stateRef.current.touched);\n\n      setStateRef(\"touched\", nextTouched);\n      setStateRef(\"isSubmitted\", false);\n      setStateRef(\"isSubmitting\", true);\n\n      try {\n        const isValid = await runValidation();\n\n        if (!isValid) {\n          const { errors } = stateRef.current;\n          onErrorRef.current(errors, getOptions(), e);\n          return { errors };\n        }\n\n        await onSubmitRef.current(stateRef.current.values, getOptions(), e);\n        setStateRef(\"isSubmitted\", true);\n\n        return { values: stateRef.current.values };\n      } catch (exception) {\n        warn(`💡 react-cool-form > submit: `, exception);\n        throw exception;\n      } finally {\n        setStateRef(\"isSubmitting\", false);\n      }\n    },\n    [getOptions, onErrorRef, onSubmitRef, runValidation, setStateRef, stateRef]\n  );\n\n  const handleChangeEvent = useCallback<HandleChangeEvent>(\n    (name, value) => {\n      setStateRef(`values.${name}`, value);\n      setDirtyIfNeeded(name);\n\n      if (validateOnChange) validateFieldWithLowPriority(name);\n    },\n    [\n      setDirtyIfNeeded,\n      setStateRef,\n      validateFieldWithLowPriority,\n      validateOnChange,\n    ]\n  );\n\n  const shouldRemoveField = useCallback<ShouldRemoveField>(\n    (name) => {\n      if (!removeOnUnmounted) return false;\n\n      let names = Array.isArray(removeOnUnmounted)\n        ? removeOnUnmounted\n        : [\n            ...Array.from(fieldsRef.current.keys()),\n            ...Object.keys(controlsRef.current),\n            ...Object.keys(fieldArrayRef.current),\n          ];\n      names = isFunction(removeOnUnmounted) ? removeOnUnmounted(names) : names;\n\n      return names.includes(name);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const removeField = useCallback<RemoveField>(\n    (name, exclude) => {\n      const { defaultValue, ...rest } = arrayToMap(exclude || [], {\n        value: \"values\",\n        error: \"errors\",\n      });\n\n      if (!defaultValue)\n        initialStateRef.current.values = unset(\n          initialStateRef.current.values,\n          name,\n          true\n        );\n\n      [\"values\", \"touched\", \"dirty\", \"errors\"].forEach((key, idx, arr) => {\n        const shouldForceUpdate = idx === arr.length - 1;\n\n        if (\n          !rest[key] &&\n          !isUndefined(get(stateRef.current[key as keyof FormState<V>], name))\n        )\n          handleUnset(`${key}.${name}`, {\n            shouldSkipUpdate: !shouldForceUpdate,\n            shouldForceUpdate,\n          });\n      });\n\n      delete fieldParsersRef.current[name];\n      delete fieldValidatorsRef.current[name];\n      delete fieldArrayRef.current[name];\n      delete controlsRef.current[name];\n\n      if (fieldsRef.current.has(name)) fieldsRef.current.delete(name);\n    },\n    [handleUnset, stateRef]\n  );\n\n  const registerForm = useCallback<RegisterForm>(\n    (el) => {\n      if (!el) return;\n\n      formRef.current = el;\n      const form = formRef.current;\n\n      fieldsRef.current = getFields(form);\n      setNodesOrValues(initialStateRef.current.values);\n\n      handlersRef.current.change = ({ target }: Event) => {\n        const { name } = target as FieldElement;\n\n        if (fieldsRef.current.has(name) && !controlsRef.current[name]) {\n          const parse = fieldParsersRef.current[name]?.parse;\n          const value = getNodeValue(name);\n\n          handleChangeEvent(name, parse ? parse(value) : value);\n          changedFieldRef.current = name;\n        }\n      };\n\n      handlersRef.current.blur = ({ target }: Event) => {\n        if (!isFieldElement(target as HTMLElement)) return;\n\n        const { name } = target as FieldElement;\n\n        if (fieldsRef.current.has(name) && !controlsRef.current[name]) {\n          setTouchedMaybeValidate(name);\n          changedFieldRef.current = undefined;\n        }\n      };\n\n      handlersRef.current.submit = (e: Event) => submit(e as any);\n\n      handlersRef.current.reset = (e: Event) => reset(null, null, e as any);\n\n      form.addEventListener(\"input\", handlersRef.current.change);\n      form.addEventListener(\"focusout\", handlersRef.current.blur);\n      form.addEventListener(\"submit\", handlersRef.current.submit);\n      form.addEventListener(\"reset\", handlersRef.current.reset);\n\n      mutationObserverRef.current = new MutationObserver(([{ type }]) => {\n        if (type !== \"childList\") return;\n\n        const fields = getFields(form);\n        let { values } = initialStateRef.current;\n\n        fieldsRef.current.forEach((_, name) => {\n          if (!shouldRemoveField(name)) return;\n          if (controlsRef.current[name]) return;\n\n          if (!fields.has(name)) {\n            removeField(\n              name,\n              !isFieldArray(fieldArrayRef.current, name) ||\n                isUndefined(\n                  get(initialStateRef.current.values, name.split(\".\")[0])\n                )\n                ? undefined\n                : [\"defaultValue\"]\n            );\n\n            return;\n          }\n\n          const currOptions = fieldsRef.current.get(name)?.options\n            ?.length as number;\n          const nextOptions = fields.get(name).options?.length as number;\n\n          if (currOptions > nextOptions) {\n            setStateRef(`values.${name}`, getNodeValue(name, fields), {\n              shouldSkipUpdate: true,\n            });\n          } else if (currOptions < nextOptions) {\n            setNodeValue(name, get(values, name), fields);\n          }\n        });\n\n        const addedNodes: string[] = [];\n\n        fields.forEach((_, name) => {\n          if (fieldsRef.current.has(name) || controlsRef.current[name]) return;\n\n          const value = get(stateRef.current.values, name);\n          if (!isUndefined(value)) values = set(values, name, value, true);\n\n          addedNodes.push(name);\n        });\n\n        fieldsRef.current = fields;\n        if (addedNodes.length) setNodesOrValues(values, { fields: addedNodes });\n      });\n\n      mutationObserverRef.current.observe(form, {\n        childList: true,\n        subtree: true,\n      });\n    },\n    [\n      getFields,\n      getNodeValue,\n      handleChangeEvent,\n      removeField,\n      reset,\n      setNodeValue,\n      setNodesOrValues,\n      setStateRef,\n      setTouchedMaybeValidate,\n      shouldRemoveField,\n      stateRef,\n      submit,\n    ]\n  );\n\n  const registerField = useCallback<RegisterField<V>>(\n    (value) => (field) => {\n      if (\n        !field?.name ||\n        controlsRef.current[field.name] ||\n        excludeFieldsRef.current[field.name]\n      )\n        return;\n\n      if (isFunction(value)) {\n        fieldValidatorsRef.current[field.name] = value;\n        return;\n      }\n\n      const { validate: validator, ...parsers } = value;\n\n      if (validator) fieldValidatorsRef.current[field.name] = validator;\n      fieldParsersRef.current[field.name] = parsers;\n    },\n    []\n  );\n\n  shared.set(id, {\n    validateOnChange,\n    shouldRemoveField,\n    initialStateRef,\n    fieldArrayRef,\n    controlsRef,\n    observersRef,\n    fieldValidatorsRef,\n    changedFieldRef,\n    setStateRef,\n    getNodeValue,\n    getFormState,\n    setDefaultValue,\n    setNodesOrValues,\n    setTouchedMaybeValidate,\n    handleChangeEvent,\n    removeField,\n    form: registerForm,\n    field: registerField,\n    focus,\n    use,\n    getState,\n    setValue,\n    setTouched,\n    setDirty,\n    setError,\n    clearErrors,\n    runValidation,\n    reset,\n    submit,\n  });\n\n  useEffect(\n    () => () => {\n      if (formRef.current) {\n        const handlers = handlersRef.current as Required<Handlers>;\n\n        formRef.current.removeEventListener(\"input\", handlers.change);\n        formRef.current.removeEventListener(\"focusout\", handlers.blur);\n        formRef.current.removeEventListener(\"submit\", handlers.submit);\n        formRef.current.removeEventListener(\"reset\", handlers.reset);\n        mutationObserverRef.current?.disconnect();\n      }\n\n      shared.remove(id);\n    },\n    [id]\n  );\n\n  return {\n    form: registerForm,\n    field: registerField,\n    focus,\n    removeField,\n    use,\n    getState,\n    setValue,\n    setTouched,\n    setDirty,\n    setError,\n    clearErrors,\n    runValidation,\n    reset,\n    submit,\n  };\n};\n","import { FormMethods, FormValues, Methods } from \"./types\";\nimport { get } from \"./shared\";\nimport { invariant } from \"./utils\";\n\nexport default <V extends FormValues = FormValues>(\n  formId?: string\n): FormMethods<V> => {\n  const methods: Methods<V> = get(formId);\n\n  invariant(\n    !methods,\n    '💡 react-cool-form > useFormMethods: It must work with an \"useForm\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form'\n  );\n\n  const {\n    form,\n    field,\n    focus,\n    removeField,\n    use,\n    getState,\n    setValue,\n    setTouched,\n    setDirty,\n    setError,\n    clearErrors,\n    runValidation,\n    reset,\n    submit,\n  } = methods;\n\n  return {\n    form,\n    field,\n    focus,\n    removeField,\n    use,\n    getState,\n    setValue,\n    setTouched,\n    setDirty,\n    setError,\n    clearErrors,\n    runValidation,\n    reset,\n    submit,\n  };\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\n\nimport { useEffect, useReducer, useRef } from \"react\";\n\nimport {\n  FormStateCallback,\n  FormStateConfig,\n  FormValues,\n  Methods,\n  Observer,\n  Path,\n} from \"./types\";\nimport { get } from \"./shared\";\nimport { invariant, isFunction, parseState } from \"./utils\";\n\nexport default <V extends FormValues = FormValues>(\n  path: Path,\n  configOrCallback: FormStateCallback | FormStateConfig<V>,\n  formId?: string\n): any => {\n  const config = !isFunction(configOrCallback) ? configOrCallback : {};\n  const methods: Methods<V> = get(config?.formId || formId);\n\n  invariant(\n    !methods,\n    `💡 react-cool-form > useFormState: It must work with an \"useForm\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form`\n  );\n\n  const observerRef = useRef<Observer<V>>();\n  const [, forceUpdate] = useReducer((c) => c + 1, 0);\n  const { observersRef, getFormState } = methods;\n  const callback = isFunction(configOrCallback) ? configOrCallback : undefined;\n\n  useEffect(() => {\n    observersRef.current.push(observerRef.current!);\n\n    return () => {\n      observersRef.current = observersRef.current.filter(\n        (o) => o !== observerRef.current\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return getFormState(path, {\n    ...config,\n    methodName: callback ? \"useFormStateCallback\" : \"useFormState\",\n    callback: (usedState) => {\n      if (!observerRef.current)\n        observerRef.current = {\n          usedState,\n          notify: callback\n            ? (state) => callback(parseState(path, state))\n            : forceUpdate,\n        };\n    },\n  });\n};\n","import { useEffect } from \"react\";\n\nimport {\n  ControlledConfig,\n  ControlledReturn,\n  FormValues,\n  Methods,\n} from \"./types\";\nimport * as shared from \"./shared\";\nimport {\n  get,\n  invariant,\n  isFieldArray,\n  isFieldElement,\n  isUndefined,\n  warn,\n} from \"./utils\";\nimport useFormState from \"./useFormState\";\n\nexport default <V extends FormValues = FormValues>(\n  name: string,\n  {\n    formId,\n    defaultValue,\n    validate,\n    parse,\n    format,\n    errorWithTouched,\n    ...props\n  }: ControlledConfig<V> = {}\n): ControlledReturn => {\n  const methods: Methods<V> = shared.get(formId);\n\n  invariant(\n    !methods,\n    '💡 react-cool-form > useControlled: It must work with an \"useForm\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form'\n  );\n\n  const meta = useFormState(\n    {\n      value: `values.${name}`,\n      error: `errors.${name}`,\n      isTouched: `touched.${name}`,\n      isDirty: `dirty.${name}`,\n    },\n    { formId, errorWithTouched }\n  );\n  const {\n    shouldRemoveField,\n    initialStateRef,\n    fieldArrayRef,\n    controlsRef,\n    fieldValidatorsRef,\n    changedFieldRef,\n    getState,\n    getNodeValue,\n    setDefaultValue,\n    setTouchedMaybeValidate,\n    handleChangeEvent,\n    removeField,\n  } = methods;\n\n  useEffect(\n    () => {\n      const isFieldArr = isFieldArray(fieldArrayRef.current, name);\n      const initialVal = get(initialStateRef.current.values, name);\n\n      if (isUndefined(initialVal)) {\n        if (\n          !isUndefined(defaultValue) &&\n          (!isFieldArr ||\n            !isUndefined(\n              get(initialStateRef.current.values, name.split(\".\")[0])\n            ))\n        ) {\n          setDefaultValue(name, defaultValue);\n        } else if (!isFieldArr) {\n          warn(\n            `💡 react-cool-form > useControlled: Please provide a default value for \"${name}\" field.`\n          );\n        }\n      } else if (isUndefined(getState(name))) {\n        setDefaultValue(name, initialVal);\n      }\n\n      return () => {\n        if (shouldRemoveField(name))\n          removeField(\n            name,\n            !isFieldArr ||\n              isUndefined(\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n                get(initialStateRef.current.values, name.split(\".\")[0])\n              )\n              ? undefined\n              : [\"defaultValue\"]\n          );\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  controlsRef.current[name] = true;\n  if (validate) fieldValidatorsRef.current[name] = validate;\n\n  const { onChange, onBlur, ...restProps } = props;\n  let value = get(initialStateRef.current.values, name);\n  value = !isUndefined(value) ? value : defaultValue;\n  value = !isUndefined(meta.value) ? meta.value : value;\n  value = (format ? format(value) : value) ?? \"\";\n\n  return [\n    {\n      name,\n      value,\n      onChange: (...event) => {\n        let val;\n\n        if (parse) {\n          val = parse(...event);\n        } else {\n          const e = event[0];\n          val =\n            e?.nativeEvent instanceof Event && isFieldElement(e.target)\n              ? getNodeValue(name)\n              : e;\n        }\n\n        handleChangeEvent(name, val);\n        if (onChange) onChange(...event);\n        changedFieldRef.current = name;\n      },\n      onBlur: (e) => {\n        setTouchedMaybeValidate(name);\n        if (onBlur) onBlur(e);\n        changedFieldRef.current = undefined;\n      },\n      ...restProps,\n    },\n    { error: meta.error, isTouched: !!meta.isTouched, isDirty: !!meta.isDirty },\n  ];\n};\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  FieldArrayConfig,\n  FieldArrayReturn,\n  FormValues,\n  Insert,\n  Keys,\n  Methods,\n  Move,\n  Push,\n  Remove,\n  StateHandler,\n  Swap,\n} from \"./types\";\nimport * as shared from \"./shared\";\nimport {\n  compact,\n  get,\n  getIsDirty,\n  invariant,\n  isUndefined,\n  set,\n  setValuesAsTrue,\n} from \"./utils\";\n\nexport default <T = any, V extends FormValues = FormValues>(\n  name: string,\n  { formId, defaultValue, validate }: FieldArrayConfig<T, V> = {}\n): FieldArrayReturn<T> => {\n  const methods: Methods<V> = shared.get(formId);\n\n  invariant(\n    !methods,\n    '💡 react-cool-form > useFieldArray: It must work with an \"useForm\" hook. See: https://react-cool-form.netlify.app/docs/api-reference/use-form'\n  );\n\n  const {\n    validateOnChange,\n    shouldRemoveField,\n    initialStateRef,\n    fieldArrayRef,\n    fieldValidatorsRef,\n    getState,\n    setDefaultValue,\n    setNodesOrValues,\n    setStateRef,\n    runValidation,\n    removeField,\n  } = methods;\n\n  const getFields = useCallback(\n    (init = false): string[] => {\n      let fields = getState(name);\n\n      if (init && isUndefined(fields)) fields = defaultValue;\n\n      return Array.isArray(fields)\n        ? fields.map((_, index) => `${name}[${index}]`)\n        : [];\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getState, name]\n  );\n\n  const [fields, setFields] = useState<string[]>(getFields(true));\n\n  const updateFields = useCallback(() => {\n    setFields(getFields());\n    setNodesOrValues(getState(\"values\"), {\n      shouldSetValues: false,\n      fields: Object.keys(fieldArrayRef.current[name].fields),\n    });\n  }, [fieldArrayRef, getFields, getState, name, setNodesOrValues]);\n\n  useEffect(() => {\n    if (\n      isUndefined(get(initialStateRef.current.values, name)) &&\n      !isUndefined(defaultValue)\n    ) {\n      setDefaultValue(name, defaultValue, true);\n      updateFields();\n    }\n\n    return () => {\n      if (shouldRemoveField(name)) removeField(name);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!fieldArrayRef.current[name])\n    fieldArrayRef.current[name] = {\n      reset: updateFields,\n      fields: {},\n    };\n  if (validate) fieldValidatorsRef.current[name] = validate;\n\n  const setState = useCallback(\n    (\n      handler: StateHandler,\n      {\n        shouldTouched,\n        shouldDirty,\n      }: { shouldTouched?: boolean; shouldDirty?: boolean } = {}\n    ) => {\n      let state = getState();\n\n      ([\"values\", \"touched\", \"errors\", \"dirty\"] as Keys[]).forEach((key) => {\n        const value = state[key][name];\n        const fieldsLength = state.values[name]?.length;\n\n        if (\n          key === \"values\" ||\n          (key === \"touched\" && shouldTouched) ||\n          (key === \"dirty\" && shouldDirty) ||\n          !isUndefined(value)\n        )\n          state = set(\n            state,\n            key,\n            {\n              ...state[key],\n              [name]: handler(\n                Array.isArray(value) ? [...value] : [],\n                key,\n                fieldsLength ? fieldsLength - 1 : 0\n              ),\n            },\n            true\n          );\n      });\n\n      setStateRef(\"\", { ...state, shouldDirty: getIsDirty(state.dirty) });\n      updateFields();\n\n      if (validateOnChange) runValidation(name);\n    },\n    [getState, name, runValidation, setStateRef, updateFields, validateOnChange]\n  );\n\n  const push = useCallback<Push<T>>(\n    (value, { shouldTouched, shouldDirty = true } = {}) => {\n      const handler: StateHandler = (f, type, lastIndex = 0) => {\n        if (type === \"values\") {\n          f.push(value);\n        } else if (\n          (type === \"touched\" && shouldTouched) ||\n          (type === \"dirty\" && shouldDirty)\n        ) {\n          f[lastIndex] = setValuesAsTrue(value);\n        }\n\n        return f;\n      };\n\n      setState(handler, { shouldTouched, shouldDirty });\n    },\n    [setState]\n  );\n\n  const insert = useCallback<Insert<T>>(\n    (index, value, { shouldTouched, shouldDirty = true } = {}) => {\n      const handler: StateHandler = (f, type) => {\n        if (type === \"values\") {\n          f.splice(index, 0, value);\n        } else if (\n          (type === \"touched\" && shouldTouched) ||\n          (type === \"dirty\" && shouldDirty)\n        ) {\n          f[index] = setValuesAsTrue(value);\n        } else if (index < f.length) {\n          f.splice(index, 0, undefined);\n        }\n\n        return f;\n      };\n\n      setState(handler, { shouldTouched, shouldDirty });\n    },\n    [setState]\n  );\n\n  const remove = useCallback<Remove<T>>(\n    (index) => {\n      const handler: StateHandler = (f) => {\n        f.splice(index, 1);\n        return compact(f).length ? f : [];\n      };\n      const value = (getState(name) || [])[index];\n\n      setState(handler);\n\n      return value;\n    },\n    [getState, name, setState]\n  );\n\n  const swap = useCallback<Swap>(\n    (indexA, indexB) => {\n      const handler: StateHandler = (f) => {\n        [f[indexA], f[indexB]] = [f[indexB], f[indexA]];\n        return f;\n      };\n\n      setState(handler);\n    },\n    [setState]\n  );\n\n  const move = useCallback<Move>(\n    (from, to) => {\n      const handler: StateHandler = (f) => {\n        f.splice(to, 0, f.splice(from, 1)[0]);\n        return f;\n      };\n\n      setState(handler);\n    },\n    [setState]\n  );\n\n  return [fields, { push, insert, remove, swap, move }];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}